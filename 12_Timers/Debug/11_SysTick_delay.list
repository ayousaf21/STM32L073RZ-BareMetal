
11_SysTick_delay.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000168c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ac  0800174c  0800174c  0001174c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080017f8  080017f8  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080017f8  080017f8  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080017f8  080017f8  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080017f8  080017f8  000117f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080017fc  080017fc  000117fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001800  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000064  08001864  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000098  08001864  00020098  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000143a  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000006a6  00000000  00000000  000214c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000001a0  00000000  00000000  00021b70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000138  00000000  00000000  00021d10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000da6c  00000000  00000000  00021e48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000022fa  00000000  00000000  0002f8b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00045405  00000000  00000000  00031bae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00076fb3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c34  00000000  00000000  00077004  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000064 	.word	0x20000064
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08001734 	.word	0x08001734

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000068 	.word	0x20000068
 8000104:	08001734 	.word	0x08001734

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			; (mov r8, r8)

08000234 <PA1_ADC_init>:
 *      Author: Muhammad Ali
 */
#include "adc.h"

void PA1_ADC_init(void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0
	// Enable clock on PA1
	RCC->IOPENR |= GPIOAEN;
 8000238:	4b29      	ldr	r3, [pc, #164]	; (80002e0 <PA1_ADC_init+0xac>)
 800023a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800023c:	4b28      	ldr	r3, [pc, #160]	; (80002e0 <PA1_ADC_init+0xac>)
 800023e:	2101      	movs	r1, #1
 8000240:	430a      	orrs	r2, r1
 8000242:	62da      	str	r2, [r3, #44]	; 0x2c
	// Set PA1 mode
	GPIOA->MODER |= (1U << 2);
 8000244:	23a0      	movs	r3, #160	; 0xa0
 8000246:	05db      	lsls	r3, r3, #23
 8000248:	681a      	ldr	r2, [r3, #0]
 800024a:	23a0      	movs	r3, #160	; 0xa0
 800024c:	05db      	lsls	r3, r3, #23
 800024e:	2104      	movs	r1, #4
 8000250:	430a      	orrs	r2, r1
 8000252:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U << 3);
 8000254:	23a0      	movs	r3, #160	; 0xa0
 8000256:	05db      	lsls	r3, r3, #23
 8000258:	681a      	ldr	r2, [r3, #0]
 800025a:	23a0      	movs	r3, #160	; 0xa0
 800025c:	05db      	lsls	r3, r3, #23
 800025e:	2108      	movs	r1, #8
 8000260:	430a      	orrs	r2, r1
 8000262:	601a      	str	r2, [r3, #0]
	// Enable clock on ADC
	RCC->APB2ENR |= ADC1_EN;
 8000264:	4b1e      	ldr	r3, [pc, #120]	; (80002e0 <PA1_ADC_init+0xac>)
 8000266:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000268:	4b1d      	ldr	r3, [pc, #116]	; (80002e0 <PA1_ADC_init+0xac>)
 800026a:	2180      	movs	r1, #128	; 0x80
 800026c:	0089      	lsls	r1, r1, #2
 800026e:	430a      	orrs	r2, r1
 8000270:	635a      	str	r2, [r3, #52]	; 0x34
	// Channel Selection
	ADC1->CHSELR = (1U << 1);
 8000272:	4b1c      	ldr	r3, [pc, #112]	; (80002e4 <PA1_ADC_init+0xb0>)
 8000274:	2202      	movs	r2, #2
 8000276:	629a      	str	r2, [r3, #40]	; 0x28
	ADC1->CFGR1 &= ~(1U << 15);
 8000278:	4b1a      	ldr	r3, [pc, #104]	; (80002e4 <PA1_ADC_init+0xb0>)
 800027a:	68da      	ldr	r2, [r3, #12]
 800027c:	4b19      	ldr	r3, [pc, #100]	; (80002e4 <PA1_ADC_init+0xb0>)
 800027e:	491a      	ldr	r1, [pc, #104]	; (80002e8 <PA1_ADC_init+0xb4>)
 8000280:	400a      	ands	r2, r1
 8000282:	60da      	str	r2, [r3, #12]
	// Resolution 12-bit
	ADC1->CFGR1 &= ~(1U << 3);
 8000284:	4b17      	ldr	r3, [pc, #92]	; (80002e4 <PA1_ADC_init+0xb0>)
 8000286:	68da      	ldr	r2, [r3, #12]
 8000288:	4b16      	ldr	r3, [pc, #88]	; (80002e4 <PA1_ADC_init+0xb0>)
 800028a:	2108      	movs	r1, #8
 800028c:	438a      	bics	r2, r1
 800028e:	60da      	str	r2, [r3, #12]
	ADC1->CFGR1 &= ~(1U << 4);
 8000290:	4b14      	ldr	r3, [pc, #80]	; (80002e4 <PA1_ADC_init+0xb0>)
 8000292:	68da      	ldr	r2, [r3, #12]
 8000294:	4b13      	ldr	r3, [pc, #76]	; (80002e4 <PA1_ADC_init+0xb0>)
 8000296:	2110      	movs	r1, #16
 8000298:	438a      	bics	r2, r1
 800029a:	60da      	str	r2, [r3, #12]
	// ADC Clock PCLK/4
	ADC1->CFGR2 &= ~(1U << 30);
 800029c:	4b11      	ldr	r3, [pc, #68]	; (80002e4 <PA1_ADC_init+0xb0>)
 800029e:	691a      	ldr	r2, [r3, #16]
 80002a0:	4b10      	ldr	r3, [pc, #64]	; (80002e4 <PA1_ADC_init+0xb0>)
 80002a2:	4912      	ldr	r1, [pc, #72]	; (80002ec <PA1_ADC_init+0xb8>)
 80002a4:	400a      	ands	r2, r1
 80002a6:	611a      	str	r2, [r3, #16]
	ADC1->CFGR2 &= ~(1U << 31);
 80002a8:	4b0e      	ldr	r3, [pc, #56]	; (80002e4 <PA1_ADC_init+0xb0>)
 80002aa:	691a      	ldr	r2, [r3, #16]
 80002ac:	4b0d      	ldr	r3, [pc, #52]	; (80002e4 <PA1_ADC_init+0xb0>)
 80002ae:	0052      	lsls	r2, r2, #1
 80002b0:	0852      	lsrs	r2, r2, #1
 80002b2:	611a      	str	r2, [r3, #16]
	// ADC Sampling time 160.5 clock cycles
//	ADC1->SMPR |= (1U << 0);
//	ADC1->SMPR |= (1U << 1);
//	ADC1->SMPR |= (1U << 2);
	// VREF Enable
	ADC1_COMMON->CCR |= (1U << 22);
 80002b4:	4b0e      	ldr	r3, [pc, #56]	; (80002f0 <PA1_ADC_init+0xbc>)
 80002b6:	681a      	ldr	r2, [r3, #0]
 80002b8:	4b0d      	ldr	r3, [pc, #52]	; (80002f0 <PA1_ADC_init+0xbc>)
 80002ba:	2180      	movs	r1, #128	; 0x80
 80002bc:	03c9      	lsls	r1, r1, #15
 80002be:	430a      	orrs	r2, r1
 80002c0:	601a      	str	r2, [r3, #0]
	// Enable ADC
	ADC1->ISR |= ADC1_RDY;
 80002c2:	4b08      	ldr	r3, [pc, #32]	; (80002e4 <PA1_ADC_init+0xb0>)
 80002c4:	681a      	ldr	r2, [r3, #0]
 80002c6:	4b07      	ldr	r3, [pc, #28]	; (80002e4 <PA1_ADC_init+0xb0>)
 80002c8:	2101      	movs	r1, #1
 80002ca:	430a      	orrs	r2, r1
 80002cc:	601a      	str	r2, [r3, #0]
	ADC1->CR |= (1U << 0);
 80002ce:	4b05      	ldr	r3, [pc, #20]	; (80002e4 <PA1_ADC_init+0xb0>)
 80002d0:	689a      	ldr	r2, [r3, #8]
 80002d2:	4b04      	ldr	r3, [pc, #16]	; (80002e4 <PA1_ADC_init+0xb0>)
 80002d4:	2101      	movs	r1, #1
 80002d6:	430a      	orrs	r2, r1
 80002d8:	609a      	str	r2, [r3, #8]
	// Config ADC parameters

}
 80002da:	46c0      	nop			; (mov r8, r8)
 80002dc:	46bd      	mov	sp, r7
 80002de:	bd80      	pop	{r7, pc}
 80002e0:	40021000 	.word	0x40021000
 80002e4:	40012400 	.word	0x40012400
 80002e8:	ffff7fff 	.word	0xffff7fff
 80002ec:	bfffffff 	.word	0xbfffffff
 80002f0:	40012708 	.word	0x40012708

080002f4 <start_conversion>:


void start_conversion(void)
{
 80002f4:	b580      	push	{r7, lr}
 80002f6:	af00      	add	r7, sp, #0
//	while (!(ADC1->ISR & ADC1_RDY)){}
	// Enable Continous Conversion
	ADC1->CFGR1 |= ADC1_CONT;
 80002f8:	4b07      	ldr	r3, [pc, #28]	; (8000318 <start_conversion+0x24>)
 80002fa:	68da      	ldr	r2, [r3, #12]
 80002fc:	4b06      	ldr	r3, [pc, #24]	; (8000318 <start_conversion+0x24>)
 80002fe:	2180      	movs	r1, #128	; 0x80
 8000300:	0189      	lsls	r1, r1, #6
 8000302:	430a      	orrs	r2, r1
 8000304:	60da      	str	r2, [r3, #12]

	ADC1->CR |= ADC1_START;
 8000306:	4b04      	ldr	r3, [pc, #16]	; (8000318 <start_conversion+0x24>)
 8000308:	689a      	ldr	r2, [r3, #8]
 800030a:	4b03      	ldr	r3, [pc, #12]	; (8000318 <start_conversion+0x24>)
 800030c:	2104      	movs	r1, #4
 800030e:	430a      	orrs	r2, r1
 8000310:	609a      	str	r2, [r3, #8]

}
 8000312:	46c0      	nop			; (mov r8, r8)
 8000314:	46bd      	mov	sp, r7
 8000316:	bd80      	pop	{r7, pc}
 8000318:	40012400 	.word	0x40012400

0800031c <adc_read>:


uint32_t adc_read(void)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	af00      	add	r7, sp, #0
	// Wait for converstion to complete
	while(!(ADC1->ISR & ADC1_EOC)){}
 8000320:	46c0      	nop			; (mov r8, r8)
 8000322:	4b05      	ldr	r3, [pc, #20]	; (8000338 <adc_read+0x1c>)
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	2204      	movs	r2, #4
 8000328:	4013      	ands	r3, r2
 800032a:	d0fa      	beq.n	8000322 <adc_read+0x6>
	// read from data register
	return (ADC1->DR);
 800032c:	4b02      	ldr	r3, [pc, #8]	; (8000338 <adc_read+0x1c>)
 800032e:	6c1b      	ldr	r3, [r3, #64]	; 0x40

}
 8000330:	0018      	movs	r0, r3
 8000332:	46bd      	mov	sp, r7
 8000334:	bd80      	pop	{r7, pc}
 8000336:	46c0      	nop			; (mov r8, r8)
 8000338:	40012400 	.word	0x40012400

0800033c <main>:

uint32_t sensor_value;


int main(void)
{
 800033c:	b580      	push	{r7, lr}
 800033e:	af00      	add	r7, sp, #0
	// Enabling HSI16 to gain 16Mhz clock
	RCC->CFGR |= (1U << 15);
 8000340:	4b3c      	ldr	r3, [pc, #240]	; (8000434 <main+0xf8>)
 8000342:	68da      	ldr	r2, [r3, #12]
 8000344:	4b3b      	ldr	r3, [pc, #236]	; (8000434 <main+0xf8>)
 8000346:	2180      	movs	r1, #128	; 0x80
 8000348:	0209      	lsls	r1, r1, #8
 800034a:	430a      	orrs	r2, r1
 800034c:	60da      	str	r2, [r3, #12]
	RCC->CFGR &= ~(1U << 24);
 800034e:	4b39      	ldr	r3, [pc, #228]	; (8000434 <main+0xf8>)
 8000350:	68da      	ldr	r2, [r3, #12]
 8000352:	4b38      	ldr	r3, [pc, #224]	; (8000434 <main+0xf8>)
 8000354:	4938      	ldr	r1, [pc, #224]	; (8000438 <main+0xfc>)
 8000356:	400a      	ands	r2, r1
 8000358:	60da      	str	r2, [r3, #12]
	RCC->CFGR |= (1U << 25);
 800035a:	4b36      	ldr	r3, [pc, #216]	; (8000434 <main+0xf8>)
 800035c:	68da      	ldr	r2, [r3, #12]
 800035e:	4b35      	ldr	r3, [pc, #212]	; (8000434 <main+0xf8>)
 8000360:	2180      	movs	r1, #128	; 0x80
 8000362:	0489      	lsls	r1, r1, #18
 8000364:	430a      	orrs	r2, r1
 8000366:	60da      	str	r2, [r3, #12]
	RCC->CFGR &= ~(1U << 26);
 8000368:	4b32      	ldr	r3, [pc, #200]	; (8000434 <main+0xf8>)
 800036a:	68da      	ldr	r2, [r3, #12]
 800036c:	4b31      	ldr	r3, [pc, #196]	; (8000434 <main+0xf8>)
 800036e:	4933      	ldr	r1, [pc, #204]	; (800043c <main+0x100>)
 8000370:	400a      	ands	r2, r1
 8000372:	60da      	str	r2, [r3, #12]
	RCC->CFGR &= ~(1U << 27);
 8000374:	4b2f      	ldr	r3, [pc, #188]	; (8000434 <main+0xf8>)
 8000376:	68da      	ldr	r2, [r3, #12]
 8000378:	4b2e      	ldr	r3, [pc, #184]	; (8000434 <main+0xf8>)
 800037a:	4931      	ldr	r1, [pc, #196]	; (8000440 <main+0x104>)
 800037c:	400a      	ands	r2, r1
 800037e:	60da      	str	r2, [r3, #12]
	RCC->CFGR |= (1U << 0);
 8000380:	4b2c      	ldr	r3, [pc, #176]	; (8000434 <main+0xf8>)
 8000382:	68da      	ldr	r2, [r3, #12]
 8000384:	4b2b      	ldr	r3, [pc, #172]	; (8000434 <main+0xf8>)
 8000386:	2101      	movs	r1, #1
 8000388:	430a      	orrs	r2, r1
 800038a:	60da      	str	r2, [r3, #12]
	RCC->CFGR &= ~(1U << 1);
 800038c:	4b29      	ldr	r3, [pc, #164]	; (8000434 <main+0xf8>)
 800038e:	68da      	ldr	r2, [r3, #12]
 8000390:	4b28      	ldr	r3, [pc, #160]	; (8000434 <main+0xf8>)
 8000392:	2102      	movs	r1, #2
 8000394:	438a      	bics	r2, r1
 8000396:	60da      	str	r2, [r3, #12]
	RCC->CR |= (1 << 0);
 8000398:	4b26      	ldr	r3, [pc, #152]	; (8000434 <main+0xf8>)
 800039a:	681a      	ldr	r2, [r3, #0]
 800039c:	4b25      	ldr	r3, [pc, #148]	; (8000434 <main+0xf8>)
 800039e:	2101      	movs	r1, #1
 80003a0:	430a      	orrs	r2, r1
 80003a2:	601a      	str	r2, [r3, #0]
	// Check HSI16 status flag
	while (!(RCC->CR & (1 << 2)));
 80003a4:	46c0      	nop			; (mov r8, r8)
 80003a6:	4b23      	ldr	r3, [pc, #140]	; (8000434 <main+0xf8>)
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	2204      	movs	r2, #4
 80003ac:	4013      	ands	r3, r2
 80003ae:	d0fa      	beq.n	80003a6 <main+0x6a>

	// Enable GPIO clock for Port A and C
	RCC->IOPENR |= GPIOAEN;
 80003b0:	4b20      	ldr	r3, [pc, #128]	; (8000434 <main+0xf8>)
 80003b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80003b4:	4b1f      	ldr	r3, [pc, #124]	; (8000434 <main+0xf8>)
 80003b6:	2101      	movs	r1, #1
 80003b8:	430a      	orrs	r2, r1
 80003ba:	62da      	str	r2, [r3, #44]	; 0x2c
	RCC->IOPENR |= GPIOCEN;
 80003bc:	4b1d      	ldr	r3, [pc, #116]	; (8000434 <main+0xf8>)
 80003be:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80003c0:	4b1c      	ldr	r3, [pc, #112]	; (8000434 <main+0xf8>)
 80003c2:	2104      	movs	r1, #4
 80003c4:	430a      	orrs	r2, r1
 80003c6:	62da      	str	r2, [r3, #44]	; 0x2c
	// GPIO PA5 output mode
	GPIOA->MODER |= (1U << 10);
 80003c8:	23a0      	movs	r3, #160	; 0xa0
 80003ca:	05db      	lsls	r3, r3, #23
 80003cc:	681a      	ldr	r2, [r3, #0]
 80003ce:	23a0      	movs	r3, #160	; 0xa0
 80003d0:	05db      	lsls	r3, r3, #23
 80003d2:	2180      	movs	r1, #128	; 0x80
 80003d4:	00c9      	lsls	r1, r1, #3
 80003d6:	430a      	orrs	r2, r1
 80003d8:	601a      	str	r2, [r3, #0]
	GPIOA->MODER &= ~(1U << 11);
 80003da:	23a0      	movs	r3, #160	; 0xa0
 80003dc:	05db      	lsls	r3, r3, #23
 80003de:	681a      	ldr	r2, [r3, #0]
 80003e0:	23a0      	movs	r3, #160	; 0xa0
 80003e2:	05db      	lsls	r3, r3, #23
 80003e4:	4917      	ldr	r1, [pc, #92]	; (8000444 <main+0x108>)
 80003e6:	400a      	ands	r2, r1
 80003e8:	601a      	str	r2, [r3, #0]
	// GPIO PC13 input mode
	GPIOC->MODER &= ~(1U << 26);
 80003ea:	4b17      	ldr	r3, [pc, #92]	; (8000448 <main+0x10c>)
 80003ec:	681a      	ldr	r2, [r3, #0]
 80003ee:	4b16      	ldr	r3, [pc, #88]	; (8000448 <main+0x10c>)
 80003f0:	4912      	ldr	r1, [pc, #72]	; (800043c <main+0x100>)
 80003f2:	400a      	ands	r2, r1
 80003f4:	601a      	str	r2, [r3, #0]
	GPIOC->MODER &= ~(1U << 27);
 80003f6:	4b14      	ldr	r3, [pc, #80]	; (8000448 <main+0x10c>)
 80003f8:	681a      	ldr	r2, [r3, #0]
 80003fa:	4b13      	ldr	r3, [pc, #76]	; (8000448 <main+0x10c>)
 80003fc:	4910      	ldr	r1, [pc, #64]	; (8000440 <main+0x104>)
 80003fe:	400a      	ands	r2, r1
 8000400:	601a      	str	r2, [r3, #0]

	UART4_TX_init();
 8000402:	f000 f8eb 	bl	80005dc <UART4_TX_init>
	PA1_ADC_init();
 8000406:	f7ff ff15 	bl	8000234 <PA1_ADC_init>
	start_conversion();
 800040a:	f7ff ff73 	bl	80002f4 <start_conversion>
    /* Loop forever */
	while(1)
	{
		sensor_value = adc_read();
 800040e:	f7ff ff85 	bl	800031c <adc_read>
 8000412:	0002      	movs	r2, r0
 8000414:	4b0d      	ldr	r3, [pc, #52]	; (800044c <main+0x110>)
 8000416:	601a      	str	r2, [r3, #0]
		printf("ADC value = %d\r\n ",(int)sensor_value );
 8000418:	4b0c      	ldr	r3, [pc, #48]	; (800044c <main+0x110>)
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	001a      	movs	r2, r3
 800041e:	4b0c      	ldr	r3, [pc, #48]	; (8000450 <main+0x114>)
 8000420:	0011      	movs	r1, r2
 8000422:	0018      	movs	r0, r3
 8000424:	f000 f9ae 	bl	8000784 <iprintf>
		sysTick_delay_ms(1000);
 8000428:	23fa      	movs	r3, #250	; 0xfa
 800042a:	009b      	lsls	r3, r3, #2
 800042c:	0018      	movs	r0, r3
 800042e:	f000 f8ad 	bl	800058c <sysTick_delay_ms>
		sensor_value = adc_read();
 8000432:	e7ec      	b.n	800040e <main+0xd2>
 8000434:	40021000 	.word	0x40021000
 8000438:	feffffff 	.word	0xfeffffff
 800043c:	fbffffff 	.word	0xfbffffff
 8000440:	f7ffffff 	.word	0xf7ffffff
 8000444:	fffff7ff 	.word	0xfffff7ff
 8000448:	50000800 	.word	0x50000800
 800044c:	20000080 	.word	0x20000080
 8000450:	0800174c 	.word	0x0800174c

08000454 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000454:	b580      	push	{r7, lr}
 8000456:	b086      	sub	sp, #24
 8000458:	af00      	add	r7, sp, #0
 800045a:	60f8      	str	r0, [r7, #12]
 800045c:	60b9      	str	r1, [r7, #8]
 800045e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000460:	2300      	movs	r3, #0
 8000462:	617b      	str	r3, [r7, #20]
 8000464:	e00a      	b.n	800047c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000466:	e000      	b.n	800046a <_read+0x16>
 8000468:	bf00      	nop
 800046a:	0001      	movs	r1, r0
 800046c:	68bb      	ldr	r3, [r7, #8]
 800046e:	1c5a      	adds	r2, r3, #1
 8000470:	60ba      	str	r2, [r7, #8]
 8000472:	b2ca      	uxtb	r2, r1
 8000474:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000476:	697b      	ldr	r3, [r7, #20]
 8000478:	3301      	adds	r3, #1
 800047a:	617b      	str	r3, [r7, #20]
 800047c:	697a      	ldr	r2, [r7, #20]
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	429a      	cmp	r2, r3
 8000482:	dbf0      	blt.n	8000466 <_read+0x12>
  }

  return len;
 8000484:	687b      	ldr	r3, [r7, #4]
}
 8000486:	0018      	movs	r0, r3
 8000488:	46bd      	mov	sp, r7
 800048a:	b006      	add	sp, #24
 800048c:	bd80      	pop	{r7, pc}

0800048e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800048e:	b580      	push	{r7, lr}
 8000490:	b086      	sub	sp, #24
 8000492:	af00      	add	r7, sp, #0
 8000494:	60f8      	str	r0, [r7, #12]
 8000496:	60b9      	str	r1, [r7, #8]
 8000498:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800049a:	2300      	movs	r3, #0
 800049c:	617b      	str	r3, [r7, #20]
 800049e:	e009      	b.n	80004b4 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80004a0:	68bb      	ldr	r3, [r7, #8]
 80004a2:	1c5a      	adds	r2, r3, #1
 80004a4:	60ba      	str	r2, [r7, #8]
 80004a6:	781b      	ldrb	r3, [r3, #0]
 80004a8:	0018      	movs	r0, r3
 80004aa:	f000 f901 	bl	80006b0 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004ae:	697b      	ldr	r3, [r7, #20]
 80004b0:	3301      	adds	r3, #1
 80004b2:	617b      	str	r3, [r7, #20]
 80004b4:	697a      	ldr	r2, [r7, #20]
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	429a      	cmp	r2, r3
 80004ba:	dbf1      	blt.n	80004a0 <_write+0x12>
  }
  return len;
 80004bc:	687b      	ldr	r3, [r7, #4]
}
 80004be:	0018      	movs	r0, r3
 80004c0:	46bd      	mov	sp, r7
 80004c2:	b006      	add	sp, #24
 80004c4:	bd80      	pop	{r7, pc}

080004c6 <_close>:

int _close(int file)
{
 80004c6:	b580      	push	{r7, lr}
 80004c8:	b082      	sub	sp, #8
 80004ca:	af00      	add	r7, sp, #0
 80004cc:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80004ce:	2301      	movs	r3, #1
 80004d0:	425b      	negs	r3, r3
}
 80004d2:	0018      	movs	r0, r3
 80004d4:	46bd      	mov	sp, r7
 80004d6:	b002      	add	sp, #8
 80004d8:	bd80      	pop	{r7, pc}

080004da <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004da:	b580      	push	{r7, lr}
 80004dc:	b082      	sub	sp, #8
 80004de:	af00      	add	r7, sp, #0
 80004e0:	6078      	str	r0, [r7, #4]
 80004e2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80004e4:	683b      	ldr	r3, [r7, #0]
 80004e6:	2280      	movs	r2, #128	; 0x80
 80004e8:	0192      	lsls	r2, r2, #6
 80004ea:	605a      	str	r2, [r3, #4]
  return 0;
 80004ec:	2300      	movs	r3, #0
}
 80004ee:	0018      	movs	r0, r3
 80004f0:	46bd      	mov	sp, r7
 80004f2:	b002      	add	sp, #8
 80004f4:	bd80      	pop	{r7, pc}

080004f6 <_isatty>:

int _isatty(int file)
{
 80004f6:	b580      	push	{r7, lr}
 80004f8:	b082      	sub	sp, #8
 80004fa:	af00      	add	r7, sp, #0
 80004fc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80004fe:	2301      	movs	r3, #1
}
 8000500:	0018      	movs	r0, r3
 8000502:	46bd      	mov	sp, r7
 8000504:	b002      	add	sp, #8
 8000506:	bd80      	pop	{r7, pc}

08000508 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000508:	b580      	push	{r7, lr}
 800050a:	b084      	sub	sp, #16
 800050c:	af00      	add	r7, sp, #0
 800050e:	60f8      	str	r0, [r7, #12]
 8000510:	60b9      	str	r1, [r7, #8]
 8000512:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000514:	2300      	movs	r3, #0
}
 8000516:	0018      	movs	r0, r3
 8000518:	46bd      	mov	sp, r7
 800051a:	b004      	add	sp, #16
 800051c:	bd80      	pop	{r7, pc}
	...

08000520 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000520:	b580      	push	{r7, lr}
 8000522:	b086      	sub	sp, #24
 8000524:	af00      	add	r7, sp, #0
 8000526:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000528:	4a14      	ldr	r2, [pc, #80]	; (800057c <_sbrk+0x5c>)
 800052a:	4b15      	ldr	r3, [pc, #84]	; (8000580 <_sbrk+0x60>)
 800052c:	1ad3      	subs	r3, r2, r3
 800052e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000530:	697b      	ldr	r3, [r7, #20]
 8000532:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000534:	4b13      	ldr	r3, [pc, #76]	; (8000584 <_sbrk+0x64>)
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	2b00      	cmp	r3, #0
 800053a:	d102      	bne.n	8000542 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800053c:	4b11      	ldr	r3, [pc, #68]	; (8000584 <_sbrk+0x64>)
 800053e:	4a12      	ldr	r2, [pc, #72]	; (8000588 <_sbrk+0x68>)
 8000540:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000542:	4b10      	ldr	r3, [pc, #64]	; (8000584 <_sbrk+0x64>)
 8000544:	681a      	ldr	r2, [r3, #0]
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	18d3      	adds	r3, r2, r3
 800054a:	693a      	ldr	r2, [r7, #16]
 800054c:	429a      	cmp	r2, r3
 800054e:	d207      	bcs.n	8000560 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000550:	f000 f8e6 	bl	8000720 <__errno>
 8000554:	0003      	movs	r3, r0
 8000556:	220c      	movs	r2, #12
 8000558:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800055a:	2301      	movs	r3, #1
 800055c:	425b      	negs	r3, r3
 800055e:	e009      	b.n	8000574 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000560:	4b08      	ldr	r3, [pc, #32]	; (8000584 <_sbrk+0x64>)
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000566:	4b07      	ldr	r3, [pc, #28]	; (8000584 <_sbrk+0x64>)
 8000568:	681a      	ldr	r2, [r3, #0]
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	18d2      	adds	r2, r2, r3
 800056e:	4b05      	ldr	r3, [pc, #20]	; (8000584 <_sbrk+0x64>)
 8000570:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8000572:	68fb      	ldr	r3, [r7, #12]
}
 8000574:	0018      	movs	r0, r3
 8000576:	46bd      	mov	sp, r7
 8000578:	b006      	add	sp, #24
 800057a:	bd80      	pop	{r7, pc}
 800057c:	20005000 	.word	0x20005000
 8000580:	00000400 	.word	0x00000400
 8000584:	20000084 	.word	0x20000084
 8000588:	20000098 	.word	0x20000098

0800058c <sysTick_delay_ms>:

#include "systick.h"


void sysTick_delay_ms(int delay)
{
 800058c:	b580      	push	{r7, lr}
 800058e:	b084      	sub	sp, #16
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
	// Reload the SysTick value
	SysTick->LOAD = SYSTICK_LOAD;
 8000594:	4b10      	ldr	r3, [pc, #64]	; (80005d8 <sysTick_delay_ms+0x4c>)
 8000596:	22fa      	movs	r2, #250	; 0xfa
 8000598:	0192      	lsls	r2, r2, #6
 800059a:	605a      	str	r2, [r3, #4]

	// Clear SysTick current value
	SysTick->VAL = 0;
 800059c:	4b0e      	ldr	r3, [pc, #56]	; (80005d8 <sysTick_delay_ms+0x4c>)
 800059e:	2200      	movs	r2, #0
 80005a0:	609a      	str	r2, [r3, #8]

	// Enable SysTick and use Processor Clock
	SysTick->CTRL = SYSTICK_EN | SYSTICK_CLKSRC;
 80005a2:	4b0d      	ldr	r3, [pc, #52]	; (80005d8 <sysTick_delay_ms+0x4c>)
 80005a4:	2205      	movs	r2, #5
 80005a6:	601a      	str	r2, [r3, #0]

	for (int i = 0; i < delay; i++)
 80005a8:	2300      	movs	r3, #0
 80005aa:	60fb      	str	r3, [r7, #12]
 80005ac:	e009      	b.n	80005c2 <sysTick_delay_ms+0x36>
	{
		// wait until COUNTFLAG is set
		while (!(SysTick->CTRL & SYSTICK_CNT_FLAG));
 80005ae:	46c0      	nop			; (mov r8, r8)
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <sysTick_delay_ms+0x4c>)
 80005b2:	681a      	ldr	r2, [r3, #0]
 80005b4:	2380      	movs	r3, #128	; 0x80
 80005b6:	025b      	lsls	r3, r3, #9
 80005b8:	4013      	ands	r3, r2
 80005ba:	d0f9      	beq.n	80005b0 <sysTick_delay_ms+0x24>
	for (int i = 0; i < delay; i++)
 80005bc:	68fb      	ldr	r3, [r7, #12]
 80005be:	3301      	adds	r3, #1
 80005c0:	60fb      	str	r3, [r7, #12]
 80005c2:	68fa      	ldr	r2, [r7, #12]
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	429a      	cmp	r2, r3
 80005c8:	dbf1      	blt.n	80005ae <sysTick_delay_ms+0x22>

	}

	SysTick->CTRL = 0;
 80005ca:	4b03      	ldr	r3, [pc, #12]	; (80005d8 <sysTick_delay_ms+0x4c>)
 80005cc:	2200      	movs	r2, #0
 80005ce:	601a      	str	r2, [r3, #0]

}
 80005d0:	46c0      	nop			; (mov r8, r8)
 80005d2:	46bd      	mov	sp, r7
 80005d4:	b004      	add	sp, #16
 80005d6:	bd80      	pop	{r7, pc}
 80005d8:	e000e010 	.word	0xe000e010

080005dc <UART4_TX_init>:
	USART4->CR1 |= (1U << 0);

}

void UART4_TX_init(void)
{
 80005dc:	b580      	push	{r7, lr}
 80005de:	af00      	add	r7, sp, #0
	// Enable Clock on GPIO Port C
	RCC->IOPENR |= GPIOCEN;
 80005e0:	4b22      	ldr	r3, [pc, #136]	; (800066c <UART4_TX_init+0x90>)
 80005e2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80005e4:	4b21      	ldr	r3, [pc, #132]	; (800066c <UART4_TX_init+0x90>)
 80005e6:	2104      	movs	r1, #4
 80005e8:	430a      	orrs	r2, r1
 80005ea:	62da      	str	r2, [r3, #44]	; 0x2c
	// GPIO C10 Alternate function mode
	GPIOC->MODER &= ~(1U << 20);
 80005ec:	4b20      	ldr	r3, [pc, #128]	; (8000670 <UART4_TX_init+0x94>)
 80005ee:	681a      	ldr	r2, [r3, #0]
 80005f0:	4b1f      	ldr	r3, [pc, #124]	; (8000670 <UART4_TX_init+0x94>)
 80005f2:	4920      	ldr	r1, [pc, #128]	; (8000674 <UART4_TX_init+0x98>)
 80005f4:	400a      	ands	r2, r1
 80005f6:	601a      	str	r2, [r3, #0]
	GPIOC->MODER |= (1U << 21);
 80005f8:	4b1d      	ldr	r3, [pc, #116]	; (8000670 <UART4_TX_init+0x94>)
 80005fa:	681a      	ldr	r2, [r3, #0]
 80005fc:	4b1c      	ldr	r3, [pc, #112]	; (8000670 <UART4_TX_init+0x94>)
 80005fe:	2180      	movs	r1, #128	; 0x80
 8000600:	0389      	lsls	r1, r1, #14
 8000602:	430a      	orrs	r2, r1
 8000604:	601a      	str	r2, [r3, #0]
	// GPIO C10 alternate function UART4_TX (AF6)
	GPIOC->AFR[1] &= ~(1U << 8);
 8000606:	4b1a      	ldr	r3, [pc, #104]	; (8000670 <UART4_TX_init+0x94>)
 8000608:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800060a:	4b19      	ldr	r3, [pc, #100]	; (8000670 <UART4_TX_init+0x94>)
 800060c:	491a      	ldr	r1, [pc, #104]	; (8000678 <UART4_TX_init+0x9c>)
 800060e:	400a      	ands	r2, r1
 8000610:	625a      	str	r2, [r3, #36]	; 0x24
	GPIOC->AFR[1] |= (1U << 9);
 8000612:	4b17      	ldr	r3, [pc, #92]	; (8000670 <UART4_TX_init+0x94>)
 8000614:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000616:	4b16      	ldr	r3, [pc, #88]	; (8000670 <UART4_TX_init+0x94>)
 8000618:	2180      	movs	r1, #128	; 0x80
 800061a:	0089      	lsls	r1, r1, #2
 800061c:	430a      	orrs	r2, r1
 800061e:	625a      	str	r2, [r3, #36]	; 0x24
	GPIOC->AFR[1] |= (1U << 10);
 8000620:	4b13      	ldr	r3, [pc, #76]	; (8000670 <UART4_TX_init+0x94>)
 8000622:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000624:	4b12      	ldr	r3, [pc, #72]	; (8000670 <UART4_TX_init+0x94>)
 8000626:	2180      	movs	r1, #128	; 0x80
 8000628:	00c9      	lsls	r1, r1, #3
 800062a:	430a      	orrs	r2, r1
 800062c:	625a      	str	r2, [r3, #36]	; 0x24
	GPIOC->AFR[1] &= ~(1U << 11);
 800062e:	4b10      	ldr	r3, [pc, #64]	; (8000670 <UART4_TX_init+0x94>)
 8000630:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000632:	4b0f      	ldr	r3, [pc, #60]	; (8000670 <UART4_TX_init+0x94>)
 8000634:	4911      	ldr	r1, [pc, #68]	; (800067c <UART4_TX_init+0xa0>)
 8000636:	400a      	ands	r2, r1
 8000638:	625a      	str	r2, [r3, #36]	; 0x24

	// Enable Clock on UART4
	RCC->APB1ENR |= USART4EN;
 800063a:	4b0c      	ldr	r3, [pc, #48]	; (800066c <UART4_TX_init+0x90>)
 800063c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800063e:	4b0b      	ldr	r3, [pc, #44]	; (800066c <UART4_TX_init+0x90>)
 8000640:	2180      	movs	r1, #128	; 0x80
 8000642:	0309      	lsls	r1, r1, #12
 8000644:	430a      	orrs	r2, r1
 8000646:	639a      	str	r2, [r3, #56]	; 0x38
	// Config BaudRate
	USART4->BRR = APB1_CLK / BAUDRATE;
 8000648:	4b0d      	ldr	r3, [pc, #52]	; (8000680 <UART4_TX_init+0xa4>)
 800064a:	4a0e      	ldr	r2, [pc, #56]	; (8000684 <UART4_TX_init+0xa8>)
 800064c:	60da      	str	r2, [r3, #12]
	// Configure transmission mode
	USART4->CR1 |= (1U << 3);
 800064e:	4b0c      	ldr	r3, [pc, #48]	; (8000680 <UART4_TX_init+0xa4>)
 8000650:	681a      	ldr	r2, [r3, #0]
 8000652:	4b0b      	ldr	r3, [pc, #44]	; (8000680 <UART4_TX_init+0xa4>)
 8000654:	2108      	movs	r1, #8
 8000656:	430a      	orrs	r2, r1
 8000658:	601a      	str	r2, [r3, #0]
	// Enable UART4 module
	USART4->CR1 |= (1U << 0);
 800065a:	4b09      	ldr	r3, [pc, #36]	; (8000680 <UART4_TX_init+0xa4>)
 800065c:	681a      	ldr	r2, [r3, #0]
 800065e:	4b08      	ldr	r3, [pc, #32]	; (8000680 <UART4_TX_init+0xa4>)
 8000660:	2101      	movs	r1, #1
 8000662:	430a      	orrs	r2, r1
 8000664:	601a      	str	r2, [r3, #0]

}
 8000666:	46c0      	nop			; (mov r8, r8)
 8000668:	46bd      	mov	sp, r7
 800066a:	bd80      	pop	{r7, pc}
 800066c:	40021000 	.word	0x40021000
 8000670:	50000800 	.word	0x50000800
 8000674:	ffefffff 	.word	0xffefffff
 8000678:	fffffeff 	.word	0xfffffeff
 800067c:	fffff7ff 	.word	0xfffff7ff
 8000680:	40004c00 	.word	0x40004c00
 8000684:	00000682 	.word	0x00000682

08000688 <UART4_write>:

void UART4_write(int data)
{
 8000688:	b580      	push	{r7, lr}
 800068a:	b082      	sub	sp, #8
 800068c:	af00      	add	r7, sp, #0
 800068e:	6078      	str	r0, [r7, #4]
	// Check if transmit data register is empty
	while (!(USART4->ISR & (1U << 7)));
 8000690:	46c0      	nop			; (mov r8, r8)
 8000692:	4b06      	ldr	r3, [pc, #24]	; (80006ac <UART4_write+0x24>)
 8000694:	69db      	ldr	r3, [r3, #28]
 8000696:	2280      	movs	r2, #128	; 0x80
 8000698:	4013      	ands	r3, r2
 800069a:	d0fa      	beq.n	8000692 <UART4_write+0xa>
	// Write to transmit data register
	USART4->TDR = (data);
 800069c:	4b03      	ldr	r3, [pc, #12]	; (80006ac <UART4_write+0x24>)
 800069e:	687a      	ldr	r2, [r7, #4]
 80006a0:	629a      	str	r2, [r3, #40]	; 0x28
}
 80006a2:	46c0      	nop			; (mov r8, r8)
 80006a4:	46bd      	mov	sp, r7
 80006a6:	b002      	add	sp, #8
 80006a8:	bd80      	pop	{r7, pc}
 80006aa:	46c0      	nop			; (mov r8, r8)
 80006ac:	40004c00 	.word	0x40004c00

080006b0 <__io_putchar>:

}


int __io_putchar(int ch)
{
 80006b0:	b580      	push	{r7, lr}
 80006b2:	b082      	sub	sp, #8
 80006b4:	af00      	add	r7, sp, #0
 80006b6:	6078      	str	r0, [r7, #4]
	UART4_write(ch);
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	0018      	movs	r0, r3
 80006bc:	f7ff ffe4 	bl	8000688 <UART4_write>
	return ch;
 80006c0:	687b      	ldr	r3, [r7, #4]
}
 80006c2:	0018      	movs	r0, r3
 80006c4:	46bd      	mov	sp, r7
 80006c6:	b002      	add	sp, #8
 80006c8:	bd80      	pop	{r7, pc}
	...

080006cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006cc:	480d      	ldr	r0, [pc, #52]	; (8000704 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006d0:	e000      	b.n	80006d4 <Reset_Handler+0x8>
 80006d2:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006d4:	480c      	ldr	r0, [pc, #48]	; (8000708 <LoopForever+0x6>)
  ldr r1, =_edata
 80006d6:	490d      	ldr	r1, [pc, #52]	; (800070c <LoopForever+0xa>)
  ldr r2, =_sidata
 80006d8:	4a0d      	ldr	r2, [pc, #52]	; (8000710 <LoopForever+0xe>)
  movs r3, #0
 80006da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006dc:	e002      	b.n	80006e4 <LoopCopyDataInit>

080006de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006e2:	3304      	adds	r3, #4

080006e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006e8:	d3f9      	bcc.n	80006de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006ea:	4a0a      	ldr	r2, [pc, #40]	; (8000714 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006ec:	4c0a      	ldr	r4, [pc, #40]	; (8000718 <LoopForever+0x16>)
  movs r3, #0
 80006ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006f0:	e001      	b.n	80006f6 <LoopFillZerobss>

080006f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006f4:	3204      	adds	r2, #4

080006f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006f8:	d3fb      	bcc.n	80006f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006fa:	f000 f817 	bl	800072c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006fe:	f7ff fe1d 	bl	800033c <main>

08000702 <LoopForever>:

LoopForever:
  b LoopForever
 8000702:	e7fe      	b.n	8000702 <LoopForever>
  ldr   r0, =_estack
 8000704:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000708:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800070c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000710:	08001800 	.word	0x08001800
  ldr r2, =_sbss
 8000714:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000718:	20000098 	.word	0x20000098

0800071c <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800071c:	e7fe      	b.n	800071c <ADC_COMP_IRQHandler>
	...

08000720 <__errno>:
 8000720:	4b01      	ldr	r3, [pc, #4]	; (8000728 <__errno+0x8>)
 8000722:	6818      	ldr	r0, [r3, #0]
 8000724:	4770      	bx	lr
 8000726:	46c0      	nop			; (mov r8, r8)
 8000728:	20000000 	.word	0x20000000

0800072c <__libc_init_array>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	2600      	movs	r6, #0
 8000730:	4d0c      	ldr	r5, [pc, #48]	; (8000764 <__libc_init_array+0x38>)
 8000732:	4c0d      	ldr	r4, [pc, #52]	; (8000768 <__libc_init_array+0x3c>)
 8000734:	1b64      	subs	r4, r4, r5
 8000736:	10a4      	asrs	r4, r4, #2
 8000738:	42a6      	cmp	r6, r4
 800073a:	d109      	bne.n	8000750 <__libc_init_array+0x24>
 800073c:	2600      	movs	r6, #0
 800073e:	f000 fff9 	bl	8001734 <_init>
 8000742:	4d0a      	ldr	r5, [pc, #40]	; (800076c <__libc_init_array+0x40>)
 8000744:	4c0a      	ldr	r4, [pc, #40]	; (8000770 <__libc_init_array+0x44>)
 8000746:	1b64      	subs	r4, r4, r5
 8000748:	10a4      	asrs	r4, r4, #2
 800074a:	42a6      	cmp	r6, r4
 800074c:	d105      	bne.n	800075a <__libc_init_array+0x2e>
 800074e:	bd70      	pop	{r4, r5, r6, pc}
 8000750:	00b3      	lsls	r3, r6, #2
 8000752:	58eb      	ldr	r3, [r5, r3]
 8000754:	4798      	blx	r3
 8000756:	3601      	adds	r6, #1
 8000758:	e7ee      	b.n	8000738 <__libc_init_array+0xc>
 800075a:	00b3      	lsls	r3, r6, #2
 800075c:	58eb      	ldr	r3, [r5, r3]
 800075e:	4798      	blx	r3
 8000760:	3601      	adds	r6, #1
 8000762:	e7f2      	b.n	800074a <__libc_init_array+0x1e>
 8000764:	080017f8 	.word	0x080017f8
 8000768:	080017f8 	.word	0x080017f8
 800076c:	080017f8 	.word	0x080017f8
 8000770:	080017fc 	.word	0x080017fc

08000774 <memset>:
 8000774:	0003      	movs	r3, r0
 8000776:	1882      	adds	r2, r0, r2
 8000778:	4293      	cmp	r3, r2
 800077a:	d100      	bne.n	800077e <memset+0xa>
 800077c:	4770      	bx	lr
 800077e:	7019      	strb	r1, [r3, #0]
 8000780:	3301      	adds	r3, #1
 8000782:	e7f9      	b.n	8000778 <memset+0x4>

08000784 <iprintf>:
 8000784:	b40f      	push	{r0, r1, r2, r3}
 8000786:	4b0b      	ldr	r3, [pc, #44]	; (80007b4 <iprintf+0x30>)
 8000788:	b513      	push	{r0, r1, r4, lr}
 800078a:	681c      	ldr	r4, [r3, #0]
 800078c:	2c00      	cmp	r4, #0
 800078e:	d005      	beq.n	800079c <iprintf+0x18>
 8000790:	69a3      	ldr	r3, [r4, #24]
 8000792:	2b00      	cmp	r3, #0
 8000794:	d102      	bne.n	800079c <iprintf+0x18>
 8000796:	0020      	movs	r0, r4
 8000798:	f000 f870 	bl	800087c <__sinit>
 800079c:	ab05      	add	r3, sp, #20
 800079e:	0020      	movs	r0, r4
 80007a0:	9a04      	ldr	r2, [sp, #16]
 80007a2:	68a1      	ldr	r1, [r4, #8]
 80007a4:	9301      	str	r3, [sp, #4]
 80007a6:	f000 f9cd 	bl	8000b44 <_vfiprintf_r>
 80007aa:	bc16      	pop	{r1, r2, r4}
 80007ac:	bc08      	pop	{r3}
 80007ae:	b004      	add	sp, #16
 80007b0:	4718      	bx	r3
 80007b2:	46c0      	nop			; (mov r8, r8)
 80007b4:	20000000 	.word	0x20000000

080007b8 <std>:
 80007b8:	2300      	movs	r3, #0
 80007ba:	b510      	push	{r4, lr}
 80007bc:	0004      	movs	r4, r0
 80007be:	6003      	str	r3, [r0, #0]
 80007c0:	6043      	str	r3, [r0, #4]
 80007c2:	6083      	str	r3, [r0, #8]
 80007c4:	8181      	strh	r1, [r0, #12]
 80007c6:	6643      	str	r3, [r0, #100]	; 0x64
 80007c8:	0019      	movs	r1, r3
 80007ca:	81c2      	strh	r2, [r0, #14]
 80007cc:	6103      	str	r3, [r0, #16]
 80007ce:	6143      	str	r3, [r0, #20]
 80007d0:	6183      	str	r3, [r0, #24]
 80007d2:	2208      	movs	r2, #8
 80007d4:	305c      	adds	r0, #92	; 0x5c
 80007d6:	f7ff ffcd 	bl	8000774 <memset>
 80007da:	4b05      	ldr	r3, [pc, #20]	; (80007f0 <std+0x38>)
 80007dc:	6224      	str	r4, [r4, #32]
 80007de:	6263      	str	r3, [r4, #36]	; 0x24
 80007e0:	4b04      	ldr	r3, [pc, #16]	; (80007f4 <std+0x3c>)
 80007e2:	62a3      	str	r3, [r4, #40]	; 0x28
 80007e4:	4b04      	ldr	r3, [pc, #16]	; (80007f8 <std+0x40>)
 80007e6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80007e8:	4b04      	ldr	r3, [pc, #16]	; (80007fc <std+0x44>)
 80007ea:	6323      	str	r3, [r4, #48]	; 0x30
 80007ec:	bd10      	pop	{r4, pc}
 80007ee:	46c0      	nop			; (mov r8, r8)
 80007f0:	080010e1 	.word	0x080010e1
 80007f4:	08001109 	.word	0x08001109
 80007f8:	08001141 	.word	0x08001141
 80007fc:	0800116d 	.word	0x0800116d

08000800 <_cleanup_r>:
 8000800:	b510      	push	{r4, lr}
 8000802:	4902      	ldr	r1, [pc, #8]	; (800080c <_cleanup_r+0xc>)
 8000804:	f000 f8ba 	bl	800097c <_fwalk_reent>
 8000808:	bd10      	pop	{r4, pc}
 800080a:	46c0      	nop			; (mov r8, r8)
 800080c:	08001479 	.word	0x08001479

08000810 <__sfmoreglue>:
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	2568      	movs	r5, #104	; 0x68
 8000814:	1e4a      	subs	r2, r1, #1
 8000816:	4355      	muls	r5, r2
 8000818:	000e      	movs	r6, r1
 800081a:	0029      	movs	r1, r5
 800081c:	3174      	adds	r1, #116	; 0x74
 800081e:	f000 f8f3 	bl	8000a08 <_malloc_r>
 8000822:	1e04      	subs	r4, r0, #0
 8000824:	d008      	beq.n	8000838 <__sfmoreglue+0x28>
 8000826:	2100      	movs	r1, #0
 8000828:	002a      	movs	r2, r5
 800082a:	6001      	str	r1, [r0, #0]
 800082c:	6046      	str	r6, [r0, #4]
 800082e:	300c      	adds	r0, #12
 8000830:	60a0      	str	r0, [r4, #8]
 8000832:	3268      	adds	r2, #104	; 0x68
 8000834:	f7ff ff9e 	bl	8000774 <memset>
 8000838:	0020      	movs	r0, r4
 800083a:	bd70      	pop	{r4, r5, r6, pc}

0800083c <__sfp_lock_acquire>:
 800083c:	b510      	push	{r4, lr}
 800083e:	4802      	ldr	r0, [pc, #8]	; (8000848 <__sfp_lock_acquire+0xc>)
 8000840:	f000 f8bd 	bl	80009be <__retarget_lock_acquire_recursive>
 8000844:	bd10      	pop	{r4, pc}
 8000846:	46c0      	nop			; (mov r8, r8)
 8000848:	20000089 	.word	0x20000089

0800084c <__sfp_lock_release>:
 800084c:	b510      	push	{r4, lr}
 800084e:	4802      	ldr	r0, [pc, #8]	; (8000858 <__sfp_lock_release+0xc>)
 8000850:	f000 f8b6 	bl	80009c0 <__retarget_lock_release_recursive>
 8000854:	bd10      	pop	{r4, pc}
 8000856:	46c0      	nop			; (mov r8, r8)
 8000858:	20000089 	.word	0x20000089

0800085c <__sinit_lock_acquire>:
 800085c:	b510      	push	{r4, lr}
 800085e:	4802      	ldr	r0, [pc, #8]	; (8000868 <__sinit_lock_acquire+0xc>)
 8000860:	f000 f8ad 	bl	80009be <__retarget_lock_acquire_recursive>
 8000864:	bd10      	pop	{r4, pc}
 8000866:	46c0      	nop			; (mov r8, r8)
 8000868:	2000008a 	.word	0x2000008a

0800086c <__sinit_lock_release>:
 800086c:	b510      	push	{r4, lr}
 800086e:	4802      	ldr	r0, [pc, #8]	; (8000878 <__sinit_lock_release+0xc>)
 8000870:	f000 f8a6 	bl	80009c0 <__retarget_lock_release_recursive>
 8000874:	bd10      	pop	{r4, pc}
 8000876:	46c0      	nop			; (mov r8, r8)
 8000878:	2000008a 	.word	0x2000008a

0800087c <__sinit>:
 800087c:	b513      	push	{r0, r1, r4, lr}
 800087e:	0004      	movs	r4, r0
 8000880:	f7ff ffec 	bl	800085c <__sinit_lock_acquire>
 8000884:	69a3      	ldr	r3, [r4, #24]
 8000886:	2b00      	cmp	r3, #0
 8000888:	d002      	beq.n	8000890 <__sinit+0x14>
 800088a:	f7ff ffef 	bl	800086c <__sinit_lock_release>
 800088e:	bd13      	pop	{r0, r1, r4, pc}
 8000890:	64a3      	str	r3, [r4, #72]	; 0x48
 8000892:	64e3      	str	r3, [r4, #76]	; 0x4c
 8000894:	6523      	str	r3, [r4, #80]	; 0x50
 8000896:	4b13      	ldr	r3, [pc, #76]	; (80008e4 <__sinit+0x68>)
 8000898:	4a13      	ldr	r2, [pc, #76]	; (80008e8 <__sinit+0x6c>)
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	62a2      	str	r2, [r4, #40]	; 0x28
 800089e:	9301      	str	r3, [sp, #4]
 80008a0:	42a3      	cmp	r3, r4
 80008a2:	d101      	bne.n	80008a8 <__sinit+0x2c>
 80008a4:	2301      	movs	r3, #1
 80008a6:	61a3      	str	r3, [r4, #24]
 80008a8:	0020      	movs	r0, r4
 80008aa:	f000 f81f 	bl	80008ec <__sfp>
 80008ae:	6060      	str	r0, [r4, #4]
 80008b0:	0020      	movs	r0, r4
 80008b2:	f000 f81b 	bl	80008ec <__sfp>
 80008b6:	60a0      	str	r0, [r4, #8]
 80008b8:	0020      	movs	r0, r4
 80008ba:	f000 f817 	bl	80008ec <__sfp>
 80008be:	2200      	movs	r2, #0
 80008c0:	2104      	movs	r1, #4
 80008c2:	60e0      	str	r0, [r4, #12]
 80008c4:	6860      	ldr	r0, [r4, #4]
 80008c6:	f7ff ff77 	bl	80007b8 <std>
 80008ca:	2201      	movs	r2, #1
 80008cc:	2109      	movs	r1, #9
 80008ce:	68a0      	ldr	r0, [r4, #8]
 80008d0:	f7ff ff72 	bl	80007b8 <std>
 80008d4:	2202      	movs	r2, #2
 80008d6:	2112      	movs	r1, #18
 80008d8:	68e0      	ldr	r0, [r4, #12]
 80008da:	f7ff ff6d 	bl	80007b8 <std>
 80008de:	2301      	movs	r3, #1
 80008e0:	61a3      	str	r3, [r4, #24]
 80008e2:	e7d2      	b.n	800088a <__sinit+0xe>
 80008e4:	08001760 	.word	0x08001760
 80008e8:	08000801 	.word	0x08000801

080008ec <__sfp>:
 80008ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ee:	0007      	movs	r7, r0
 80008f0:	f7ff ffa4 	bl	800083c <__sfp_lock_acquire>
 80008f4:	4b1f      	ldr	r3, [pc, #124]	; (8000974 <__sfp+0x88>)
 80008f6:	681e      	ldr	r6, [r3, #0]
 80008f8:	69b3      	ldr	r3, [r6, #24]
 80008fa:	2b00      	cmp	r3, #0
 80008fc:	d102      	bne.n	8000904 <__sfp+0x18>
 80008fe:	0030      	movs	r0, r6
 8000900:	f7ff ffbc 	bl	800087c <__sinit>
 8000904:	3648      	adds	r6, #72	; 0x48
 8000906:	68b4      	ldr	r4, [r6, #8]
 8000908:	6873      	ldr	r3, [r6, #4]
 800090a:	3b01      	subs	r3, #1
 800090c:	d504      	bpl.n	8000918 <__sfp+0x2c>
 800090e:	6833      	ldr	r3, [r6, #0]
 8000910:	2b00      	cmp	r3, #0
 8000912:	d022      	beq.n	800095a <__sfp+0x6e>
 8000914:	6836      	ldr	r6, [r6, #0]
 8000916:	e7f6      	b.n	8000906 <__sfp+0x1a>
 8000918:	220c      	movs	r2, #12
 800091a:	5ea5      	ldrsh	r5, [r4, r2]
 800091c:	2d00      	cmp	r5, #0
 800091e:	d11a      	bne.n	8000956 <__sfp+0x6a>
 8000920:	0020      	movs	r0, r4
 8000922:	4b15      	ldr	r3, [pc, #84]	; (8000978 <__sfp+0x8c>)
 8000924:	3058      	adds	r0, #88	; 0x58
 8000926:	60e3      	str	r3, [r4, #12]
 8000928:	6665      	str	r5, [r4, #100]	; 0x64
 800092a:	f000 f847 	bl	80009bc <__retarget_lock_init_recursive>
 800092e:	f7ff ff8d 	bl	800084c <__sfp_lock_release>
 8000932:	0020      	movs	r0, r4
 8000934:	2208      	movs	r2, #8
 8000936:	0029      	movs	r1, r5
 8000938:	6025      	str	r5, [r4, #0]
 800093a:	60a5      	str	r5, [r4, #8]
 800093c:	6065      	str	r5, [r4, #4]
 800093e:	6125      	str	r5, [r4, #16]
 8000940:	6165      	str	r5, [r4, #20]
 8000942:	61a5      	str	r5, [r4, #24]
 8000944:	305c      	adds	r0, #92	; 0x5c
 8000946:	f7ff ff15 	bl	8000774 <memset>
 800094a:	6365      	str	r5, [r4, #52]	; 0x34
 800094c:	63a5      	str	r5, [r4, #56]	; 0x38
 800094e:	64a5      	str	r5, [r4, #72]	; 0x48
 8000950:	64e5      	str	r5, [r4, #76]	; 0x4c
 8000952:	0020      	movs	r0, r4
 8000954:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000956:	3468      	adds	r4, #104	; 0x68
 8000958:	e7d7      	b.n	800090a <__sfp+0x1e>
 800095a:	2104      	movs	r1, #4
 800095c:	0038      	movs	r0, r7
 800095e:	f7ff ff57 	bl	8000810 <__sfmoreglue>
 8000962:	1e04      	subs	r4, r0, #0
 8000964:	6030      	str	r0, [r6, #0]
 8000966:	d1d5      	bne.n	8000914 <__sfp+0x28>
 8000968:	f7ff ff70 	bl	800084c <__sfp_lock_release>
 800096c:	230c      	movs	r3, #12
 800096e:	603b      	str	r3, [r7, #0]
 8000970:	e7ef      	b.n	8000952 <__sfp+0x66>
 8000972:	46c0      	nop			; (mov r8, r8)
 8000974:	08001760 	.word	0x08001760
 8000978:	ffff0001 	.word	0xffff0001

0800097c <_fwalk_reent>:
 800097c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800097e:	0004      	movs	r4, r0
 8000980:	0006      	movs	r6, r0
 8000982:	2700      	movs	r7, #0
 8000984:	9101      	str	r1, [sp, #4]
 8000986:	3448      	adds	r4, #72	; 0x48
 8000988:	6863      	ldr	r3, [r4, #4]
 800098a:	68a5      	ldr	r5, [r4, #8]
 800098c:	9300      	str	r3, [sp, #0]
 800098e:	9b00      	ldr	r3, [sp, #0]
 8000990:	3b01      	subs	r3, #1
 8000992:	9300      	str	r3, [sp, #0]
 8000994:	d504      	bpl.n	80009a0 <_fwalk_reent+0x24>
 8000996:	6824      	ldr	r4, [r4, #0]
 8000998:	2c00      	cmp	r4, #0
 800099a:	d1f5      	bne.n	8000988 <_fwalk_reent+0xc>
 800099c:	0038      	movs	r0, r7
 800099e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80009a0:	89ab      	ldrh	r3, [r5, #12]
 80009a2:	2b01      	cmp	r3, #1
 80009a4:	d908      	bls.n	80009b8 <_fwalk_reent+0x3c>
 80009a6:	220e      	movs	r2, #14
 80009a8:	5eab      	ldrsh	r3, [r5, r2]
 80009aa:	3301      	adds	r3, #1
 80009ac:	d004      	beq.n	80009b8 <_fwalk_reent+0x3c>
 80009ae:	0029      	movs	r1, r5
 80009b0:	0030      	movs	r0, r6
 80009b2:	9b01      	ldr	r3, [sp, #4]
 80009b4:	4798      	blx	r3
 80009b6:	4307      	orrs	r7, r0
 80009b8:	3568      	adds	r5, #104	; 0x68
 80009ba:	e7e8      	b.n	800098e <_fwalk_reent+0x12>

080009bc <__retarget_lock_init_recursive>:
 80009bc:	4770      	bx	lr

080009be <__retarget_lock_acquire_recursive>:
 80009be:	4770      	bx	lr

080009c0 <__retarget_lock_release_recursive>:
 80009c0:	4770      	bx	lr
	...

080009c4 <sbrk_aligned>:
 80009c4:	b570      	push	{r4, r5, r6, lr}
 80009c6:	4e0f      	ldr	r6, [pc, #60]	; (8000a04 <sbrk_aligned+0x40>)
 80009c8:	000d      	movs	r5, r1
 80009ca:	6831      	ldr	r1, [r6, #0]
 80009cc:	0004      	movs	r4, r0
 80009ce:	2900      	cmp	r1, #0
 80009d0:	d102      	bne.n	80009d8 <sbrk_aligned+0x14>
 80009d2:	f000 fb73 	bl	80010bc <_sbrk_r>
 80009d6:	6030      	str	r0, [r6, #0]
 80009d8:	0029      	movs	r1, r5
 80009da:	0020      	movs	r0, r4
 80009dc:	f000 fb6e 	bl	80010bc <_sbrk_r>
 80009e0:	1c43      	adds	r3, r0, #1
 80009e2:	d00a      	beq.n	80009fa <sbrk_aligned+0x36>
 80009e4:	2303      	movs	r3, #3
 80009e6:	1cc5      	adds	r5, r0, #3
 80009e8:	439d      	bics	r5, r3
 80009ea:	42a8      	cmp	r0, r5
 80009ec:	d007      	beq.n	80009fe <sbrk_aligned+0x3a>
 80009ee:	1a29      	subs	r1, r5, r0
 80009f0:	0020      	movs	r0, r4
 80009f2:	f000 fb63 	bl	80010bc <_sbrk_r>
 80009f6:	1c43      	adds	r3, r0, #1
 80009f8:	d101      	bne.n	80009fe <sbrk_aligned+0x3a>
 80009fa:	2501      	movs	r5, #1
 80009fc:	426d      	negs	r5, r5
 80009fe:	0028      	movs	r0, r5
 8000a00:	bd70      	pop	{r4, r5, r6, pc}
 8000a02:	46c0      	nop			; (mov r8, r8)
 8000a04:	20000090 	.word	0x20000090

08000a08 <_malloc_r>:
 8000a08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000a0a:	2203      	movs	r2, #3
 8000a0c:	1ccb      	adds	r3, r1, #3
 8000a0e:	4393      	bics	r3, r2
 8000a10:	3308      	adds	r3, #8
 8000a12:	0006      	movs	r6, r0
 8000a14:	001f      	movs	r7, r3
 8000a16:	2b0c      	cmp	r3, #12
 8000a18:	d232      	bcs.n	8000a80 <_malloc_r+0x78>
 8000a1a:	270c      	movs	r7, #12
 8000a1c:	42b9      	cmp	r1, r7
 8000a1e:	d831      	bhi.n	8000a84 <_malloc_r+0x7c>
 8000a20:	0030      	movs	r0, r6
 8000a22:	f000 fdf5 	bl	8001610 <__malloc_lock>
 8000a26:	4d32      	ldr	r5, [pc, #200]	; (8000af0 <_malloc_r+0xe8>)
 8000a28:	682b      	ldr	r3, [r5, #0]
 8000a2a:	001c      	movs	r4, r3
 8000a2c:	2c00      	cmp	r4, #0
 8000a2e:	d12e      	bne.n	8000a8e <_malloc_r+0x86>
 8000a30:	0039      	movs	r1, r7
 8000a32:	0030      	movs	r0, r6
 8000a34:	f7ff ffc6 	bl	80009c4 <sbrk_aligned>
 8000a38:	0004      	movs	r4, r0
 8000a3a:	1c43      	adds	r3, r0, #1
 8000a3c:	d11e      	bne.n	8000a7c <_malloc_r+0x74>
 8000a3e:	682c      	ldr	r4, [r5, #0]
 8000a40:	0025      	movs	r5, r4
 8000a42:	2d00      	cmp	r5, #0
 8000a44:	d14a      	bne.n	8000adc <_malloc_r+0xd4>
 8000a46:	6823      	ldr	r3, [r4, #0]
 8000a48:	0029      	movs	r1, r5
 8000a4a:	18e3      	adds	r3, r4, r3
 8000a4c:	0030      	movs	r0, r6
 8000a4e:	9301      	str	r3, [sp, #4]
 8000a50:	f000 fb34 	bl	80010bc <_sbrk_r>
 8000a54:	9b01      	ldr	r3, [sp, #4]
 8000a56:	4283      	cmp	r3, r0
 8000a58:	d143      	bne.n	8000ae2 <_malloc_r+0xda>
 8000a5a:	6823      	ldr	r3, [r4, #0]
 8000a5c:	3703      	adds	r7, #3
 8000a5e:	1aff      	subs	r7, r7, r3
 8000a60:	2303      	movs	r3, #3
 8000a62:	439f      	bics	r7, r3
 8000a64:	3708      	adds	r7, #8
 8000a66:	2f0c      	cmp	r7, #12
 8000a68:	d200      	bcs.n	8000a6c <_malloc_r+0x64>
 8000a6a:	270c      	movs	r7, #12
 8000a6c:	0039      	movs	r1, r7
 8000a6e:	0030      	movs	r0, r6
 8000a70:	f7ff ffa8 	bl	80009c4 <sbrk_aligned>
 8000a74:	1c43      	adds	r3, r0, #1
 8000a76:	d034      	beq.n	8000ae2 <_malloc_r+0xda>
 8000a78:	6823      	ldr	r3, [r4, #0]
 8000a7a:	19df      	adds	r7, r3, r7
 8000a7c:	6027      	str	r7, [r4, #0]
 8000a7e:	e013      	b.n	8000aa8 <_malloc_r+0xa0>
 8000a80:	2b00      	cmp	r3, #0
 8000a82:	dacb      	bge.n	8000a1c <_malloc_r+0x14>
 8000a84:	230c      	movs	r3, #12
 8000a86:	2500      	movs	r5, #0
 8000a88:	6033      	str	r3, [r6, #0]
 8000a8a:	0028      	movs	r0, r5
 8000a8c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000a8e:	6822      	ldr	r2, [r4, #0]
 8000a90:	1bd1      	subs	r1, r2, r7
 8000a92:	d420      	bmi.n	8000ad6 <_malloc_r+0xce>
 8000a94:	290b      	cmp	r1, #11
 8000a96:	d917      	bls.n	8000ac8 <_malloc_r+0xc0>
 8000a98:	19e2      	adds	r2, r4, r7
 8000a9a:	6027      	str	r7, [r4, #0]
 8000a9c:	42a3      	cmp	r3, r4
 8000a9e:	d111      	bne.n	8000ac4 <_malloc_r+0xbc>
 8000aa0:	602a      	str	r2, [r5, #0]
 8000aa2:	6863      	ldr	r3, [r4, #4]
 8000aa4:	6011      	str	r1, [r2, #0]
 8000aa6:	6053      	str	r3, [r2, #4]
 8000aa8:	0030      	movs	r0, r6
 8000aaa:	0025      	movs	r5, r4
 8000aac:	f000 fdb8 	bl	8001620 <__malloc_unlock>
 8000ab0:	2207      	movs	r2, #7
 8000ab2:	350b      	adds	r5, #11
 8000ab4:	1d23      	adds	r3, r4, #4
 8000ab6:	4395      	bics	r5, r2
 8000ab8:	1aea      	subs	r2, r5, r3
 8000aba:	429d      	cmp	r5, r3
 8000abc:	d0e5      	beq.n	8000a8a <_malloc_r+0x82>
 8000abe:	1b5b      	subs	r3, r3, r5
 8000ac0:	50a3      	str	r3, [r4, r2]
 8000ac2:	e7e2      	b.n	8000a8a <_malloc_r+0x82>
 8000ac4:	605a      	str	r2, [r3, #4]
 8000ac6:	e7ec      	b.n	8000aa2 <_malloc_r+0x9a>
 8000ac8:	6862      	ldr	r2, [r4, #4]
 8000aca:	42a3      	cmp	r3, r4
 8000acc:	d101      	bne.n	8000ad2 <_malloc_r+0xca>
 8000ace:	602a      	str	r2, [r5, #0]
 8000ad0:	e7ea      	b.n	8000aa8 <_malloc_r+0xa0>
 8000ad2:	605a      	str	r2, [r3, #4]
 8000ad4:	e7e8      	b.n	8000aa8 <_malloc_r+0xa0>
 8000ad6:	0023      	movs	r3, r4
 8000ad8:	6864      	ldr	r4, [r4, #4]
 8000ada:	e7a7      	b.n	8000a2c <_malloc_r+0x24>
 8000adc:	002c      	movs	r4, r5
 8000ade:	686d      	ldr	r5, [r5, #4]
 8000ae0:	e7af      	b.n	8000a42 <_malloc_r+0x3a>
 8000ae2:	230c      	movs	r3, #12
 8000ae4:	0030      	movs	r0, r6
 8000ae6:	6033      	str	r3, [r6, #0]
 8000ae8:	f000 fd9a 	bl	8001620 <__malloc_unlock>
 8000aec:	e7cd      	b.n	8000a8a <_malloc_r+0x82>
 8000aee:	46c0      	nop			; (mov r8, r8)
 8000af0:	2000008c 	.word	0x2000008c

08000af4 <__sfputc_r>:
 8000af4:	6893      	ldr	r3, [r2, #8]
 8000af6:	b510      	push	{r4, lr}
 8000af8:	3b01      	subs	r3, #1
 8000afa:	6093      	str	r3, [r2, #8]
 8000afc:	2b00      	cmp	r3, #0
 8000afe:	da04      	bge.n	8000b0a <__sfputc_r+0x16>
 8000b00:	6994      	ldr	r4, [r2, #24]
 8000b02:	42a3      	cmp	r3, r4
 8000b04:	db07      	blt.n	8000b16 <__sfputc_r+0x22>
 8000b06:	290a      	cmp	r1, #10
 8000b08:	d005      	beq.n	8000b16 <__sfputc_r+0x22>
 8000b0a:	6813      	ldr	r3, [r2, #0]
 8000b0c:	1c58      	adds	r0, r3, #1
 8000b0e:	6010      	str	r0, [r2, #0]
 8000b10:	7019      	strb	r1, [r3, #0]
 8000b12:	0008      	movs	r0, r1
 8000b14:	bd10      	pop	{r4, pc}
 8000b16:	f000 fb2f 	bl	8001178 <__swbuf_r>
 8000b1a:	0001      	movs	r1, r0
 8000b1c:	e7f9      	b.n	8000b12 <__sfputc_r+0x1e>

08000b1e <__sfputs_r>:
 8000b1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b20:	0006      	movs	r6, r0
 8000b22:	000f      	movs	r7, r1
 8000b24:	0014      	movs	r4, r2
 8000b26:	18d5      	adds	r5, r2, r3
 8000b28:	42ac      	cmp	r4, r5
 8000b2a:	d101      	bne.n	8000b30 <__sfputs_r+0x12>
 8000b2c:	2000      	movs	r0, #0
 8000b2e:	e007      	b.n	8000b40 <__sfputs_r+0x22>
 8000b30:	7821      	ldrb	r1, [r4, #0]
 8000b32:	003a      	movs	r2, r7
 8000b34:	0030      	movs	r0, r6
 8000b36:	f7ff ffdd 	bl	8000af4 <__sfputc_r>
 8000b3a:	3401      	adds	r4, #1
 8000b3c:	1c43      	adds	r3, r0, #1
 8000b3e:	d1f3      	bne.n	8000b28 <__sfputs_r+0xa>
 8000b40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000b44 <_vfiprintf_r>:
 8000b44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b46:	b0a1      	sub	sp, #132	; 0x84
 8000b48:	0006      	movs	r6, r0
 8000b4a:	000c      	movs	r4, r1
 8000b4c:	001f      	movs	r7, r3
 8000b4e:	9203      	str	r2, [sp, #12]
 8000b50:	2800      	cmp	r0, #0
 8000b52:	d004      	beq.n	8000b5e <_vfiprintf_r+0x1a>
 8000b54:	6983      	ldr	r3, [r0, #24]
 8000b56:	2b00      	cmp	r3, #0
 8000b58:	d101      	bne.n	8000b5e <_vfiprintf_r+0x1a>
 8000b5a:	f7ff fe8f 	bl	800087c <__sinit>
 8000b5e:	4b8e      	ldr	r3, [pc, #568]	; (8000d98 <_vfiprintf_r+0x254>)
 8000b60:	429c      	cmp	r4, r3
 8000b62:	d11c      	bne.n	8000b9e <_vfiprintf_r+0x5a>
 8000b64:	6874      	ldr	r4, [r6, #4]
 8000b66:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b68:	07db      	lsls	r3, r3, #31
 8000b6a:	d405      	bmi.n	8000b78 <_vfiprintf_r+0x34>
 8000b6c:	89a3      	ldrh	r3, [r4, #12]
 8000b6e:	059b      	lsls	r3, r3, #22
 8000b70:	d402      	bmi.n	8000b78 <_vfiprintf_r+0x34>
 8000b72:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b74:	f7ff ff23 	bl	80009be <__retarget_lock_acquire_recursive>
 8000b78:	89a3      	ldrh	r3, [r4, #12]
 8000b7a:	071b      	lsls	r3, r3, #28
 8000b7c:	d502      	bpl.n	8000b84 <_vfiprintf_r+0x40>
 8000b7e:	6923      	ldr	r3, [r4, #16]
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d11d      	bne.n	8000bc0 <_vfiprintf_r+0x7c>
 8000b84:	0021      	movs	r1, r4
 8000b86:	0030      	movs	r0, r6
 8000b88:	f000 fb60 	bl	800124c <__swsetup_r>
 8000b8c:	2800      	cmp	r0, #0
 8000b8e:	d017      	beq.n	8000bc0 <_vfiprintf_r+0x7c>
 8000b90:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b92:	07db      	lsls	r3, r3, #31
 8000b94:	d50d      	bpl.n	8000bb2 <_vfiprintf_r+0x6e>
 8000b96:	2001      	movs	r0, #1
 8000b98:	4240      	negs	r0, r0
 8000b9a:	b021      	add	sp, #132	; 0x84
 8000b9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b9e:	4b7f      	ldr	r3, [pc, #508]	; (8000d9c <_vfiprintf_r+0x258>)
 8000ba0:	429c      	cmp	r4, r3
 8000ba2:	d101      	bne.n	8000ba8 <_vfiprintf_r+0x64>
 8000ba4:	68b4      	ldr	r4, [r6, #8]
 8000ba6:	e7de      	b.n	8000b66 <_vfiprintf_r+0x22>
 8000ba8:	4b7d      	ldr	r3, [pc, #500]	; (8000da0 <_vfiprintf_r+0x25c>)
 8000baa:	429c      	cmp	r4, r3
 8000bac:	d1db      	bne.n	8000b66 <_vfiprintf_r+0x22>
 8000bae:	68f4      	ldr	r4, [r6, #12]
 8000bb0:	e7d9      	b.n	8000b66 <_vfiprintf_r+0x22>
 8000bb2:	89a3      	ldrh	r3, [r4, #12]
 8000bb4:	059b      	lsls	r3, r3, #22
 8000bb6:	d4ee      	bmi.n	8000b96 <_vfiprintf_r+0x52>
 8000bb8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000bba:	f7ff ff01 	bl	80009c0 <__retarget_lock_release_recursive>
 8000bbe:	e7ea      	b.n	8000b96 <_vfiprintf_r+0x52>
 8000bc0:	2300      	movs	r3, #0
 8000bc2:	ad08      	add	r5, sp, #32
 8000bc4:	616b      	str	r3, [r5, #20]
 8000bc6:	3320      	adds	r3, #32
 8000bc8:	766b      	strb	r3, [r5, #25]
 8000bca:	3310      	adds	r3, #16
 8000bcc:	76ab      	strb	r3, [r5, #26]
 8000bce:	9707      	str	r7, [sp, #28]
 8000bd0:	9f03      	ldr	r7, [sp, #12]
 8000bd2:	783b      	ldrb	r3, [r7, #0]
 8000bd4:	2b00      	cmp	r3, #0
 8000bd6:	d001      	beq.n	8000bdc <_vfiprintf_r+0x98>
 8000bd8:	2b25      	cmp	r3, #37	; 0x25
 8000bda:	d14e      	bne.n	8000c7a <_vfiprintf_r+0x136>
 8000bdc:	9b03      	ldr	r3, [sp, #12]
 8000bde:	1afb      	subs	r3, r7, r3
 8000be0:	9305      	str	r3, [sp, #20]
 8000be2:	9b03      	ldr	r3, [sp, #12]
 8000be4:	429f      	cmp	r7, r3
 8000be6:	d00d      	beq.n	8000c04 <_vfiprintf_r+0xc0>
 8000be8:	9b05      	ldr	r3, [sp, #20]
 8000bea:	0021      	movs	r1, r4
 8000bec:	0030      	movs	r0, r6
 8000bee:	9a03      	ldr	r2, [sp, #12]
 8000bf0:	f7ff ff95 	bl	8000b1e <__sfputs_r>
 8000bf4:	1c43      	adds	r3, r0, #1
 8000bf6:	d100      	bne.n	8000bfa <_vfiprintf_r+0xb6>
 8000bf8:	e0b5      	b.n	8000d66 <_vfiprintf_r+0x222>
 8000bfa:	696a      	ldr	r2, [r5, #20]
 8000bfc:	9b05      	ldr	r3, [sp, #20]
 8000bfe:	4694      	mov	ip, r2
 8000c00:	4463      	add	r3, ip
 8000c02:	616b      	str	r3, [r5, #20]
 8000c04:	783b      	ldrb	r3, [r7, #0]
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	d100      	bne.n	8000c0c <_vfiprintf_r+0xc8>
 8000c0a:	e0ac      	b.n	8000d66 <_vfiprintf_r+0x222>
 8000c0c:	2201      	movs	r2, #1
 8000c0e:	1c7b      	adds	r3, r7, #1
 8000c10:	9303      	str	r3, [sp, #12]
 8000c12:	2300      	movs	r3, #0
 8000c14:	4252      	negs	r2, r2
 8000c16:	606a      	str	r2, [r5, #4]
 8000c18:	a904      	add	r1, sp, #16
 8000c1a:	3254      	adds	r2, #84	; 0x54
 8000c1c:	1852      	adds	r2, r2, r1
 8000c1e:	602b      	str	r3, [r5, #0]
 8000c20:	60eb      	str	r3, [r5, #12]
 8000c22:	60ab      	str	r3, [r5, #8]
 8000c24:	7013      	strb	r3, [r2, #0]
 8000c26:	65ab      	str	r3, [r5, #88]	; 0x58
 8000c28:	9b03      	ldr	r3, [sp, #12]
 8000c2a:	2205      	movs	r2, #5
 8000c2c:	7819      	ldrb	r1, [r3, #0]
 8000c2e:	485d      	ldr	r0, [pc, #372]	; (8000da4 <_vfiprintf_r+0x260>)
 8000c30:	f000 fce2 	bl	80015f8 <memchr>
 8000c34:	9b03      	ldr	r3, [sp, #12]
 8000c36:	1c5f      	adds	r7, r3, #1
 8000c38:	2800      	cmp	r0, #0
 8000c3a:	d120      	bne.n	8000c7e <_vfiprintf_r+0x13a>
 8000c3c:	682a      	ldr	r2, [r5, #0]
 8000c3e:	06d3      	lsls	r3, r2, #27
 8000c40:	d504      	bpl.n	8000c4c <_vfiprintf_r+0x108>
 8000c42:	2353      	movs	r3, #83	; 0x53
 8000c44:	a904      	add	r1, sp, #16
 8000c46:	185b      	adds	r3, r3, r1
 8000c48:	2120      	movs	r1, #32
 8000c4a:	7019      	strb	r1, [r3, #0]
 8000c4c:	0713      	lsls	r3, r2, #28
 8000c4e:	d504      	bpl.n	8000c5a <_vfiprintf_r+0x116>
 8000c50:	2353      	movs	r3, #83	; 0x53
 8000c52:	a904      	add	r1, sp, #16
 8000c54:	185b      	adds	r3, r3, r1
 8000c56:	212b      	movs	r1, #43	; 0x2b
 8000c58:	7019      	strb	r1, [r3, #0]
 8000c5a:	9b03      	ldr	r3, [sp, #12]
 8000c5c:	781b      	ldrb	r3, [r3, #0]
 8000c5e:	2b2a      	cmp	r3, #42	; 0x2a
 8000c60:	d016      	beq.n	8000c90 <_vfiprintf_r+0x14c>
 8000c62:	2100      	movs	r1, #0
 8000c64:	68eb      	ldr	r3, [r5, #12]
 8000c66:	9f03      	ldr	r7, [sp, #12]
 8000c68:	783a      	ldrb	r2, [r7, #0]
 8000c6a:	1c78      	adds	r0, r7, #1
 8000c6c:	3a30      	subs	r2, #48	; 0x30
 8000c6e:	4684      	mov	ip, r0
 8000c70:	2a09      	cmp	r2, #9
 8000c72:	d94f      	bls.n	8000d14 <_vfiprintf_r+0x1d0>
 8000c74:	2900      	cmp	r1, #0
 8000c76:	d111      	bne.n	8000c9c <_vfiprintf_r+0x158>
 8000c78:	e017      	b.n	8000caa <_vfiprintf_r+0x166>
 8000c7a:	3701      	adds	r7, #1
 8000c7c:	e7a9      	b.n	8000bd2 <_vfiprintf_r+0x8e>
 8000c7e:	4b49      	ldr	r3, [pc, #292]	; (8000da4 <_vfiprintf_r+0x260>)
 8000c80:	682a      	ldr	r2, [r5, #0]
 8000c82:	1ac0      	subs	r0, r0, r3
 8000c84:	2301      	movs	r3, #1
 8000c86:	4083      	lsls	r3, r0
 8000c88:	4313      	orrs	r3, r2
 8000c8a:	602b      	str	r3, [r5, #0]
 8000c8c:	9703      	str	r7, [sp, #12]
 8000c8e:	e7cb      	b.n	8000c28 <_vfiprintf_r+0xe4>
 8000c90:	9b07      	ldr	r3, [sp, #28]
 8000c92:	1d19      	adds	r1, r3, #4
 8000c94:	681b      	ldr	r3, [r3, #0]
 8000c96:	9107      	str	r1, [sp, #28]
 8000c98:	2b00      	cmp	r3, #0
 8000c9a:	db01      	blt.n	8000ca0 <_vfiprintf_r+0x15c>
 8000c9c:	930b      	str	r3, [sp, #44]	; 0x2c
 8000c9e:	e004      	b.n	8000caa <_vfiprintf_r+0x166>
 8000ca0:	425b      	negs	r3, r3
 8000ca2:	60eb      	str	r3, [r5, #12]
 8000ca4:	2302      	movs	r3, #2
 8000ca6:	4313      	orrs	r3, r2
 8000ca8:	602b      	str	r3, [r5, #0]
 8000caa:	783b      	ldrb	r3, [r7, #0]
 8000cac:	2b2e      	cmp	r3, #46	; 0x2e
 8000cae:	d10a      	bne.n	8000cc6 <_vfiprintf_r+0x182>
 8000cb0:	787b      	ldrb	r3, [r7, #1]
 8000cb2:	2b2a      	cmp	r3, #42	; 0x2a
 8000cb4:	d137      	bne.n	8000d26 <_vfiprintf_r+0x1e2>
 8000cb6:	9b07      	ldr	r3, [sp, #28]
 8000cb8:	3702      	adds	r7, #2
 8000cba:	1d1a      	adds	r2, r3, #4
 8000cbc:	681b      	ldr	r3, [r3, #0]
 8000cbe:	9207      	str	r2, [sp, #28]
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	db2d      	blt.n	8000d20 <_vfiprintf_r+0x1dc>
 8000cc4:	9309      	str	r3, [sp, #36]	; 0x24
 8000cc6:	2203      	movs	r2, #3
 8000cc8:	7839      	ldrb	r1, [r7, #0]
 8000cca:	4837      	ldr	r0, [pc, #220]	; (8000da8 <_vfiprintf_r+0x264>)
 8000ccc:	f000 fc94 	bl	80015f8 <memchr>
 8000cd0:	2800      	cmp	r0, #0
 8000cd2:	d007      	beq.n	8000ce4 <_vfiprintf_r+0x1a0>
 8000cd4:	4b34      	ldr	r3, [pc, #208]	; (8000da8 <_vfiprintf_r+0x264>)
 8000cd6:	682a      	ldr	r2, [r5, #0]
 8000cd8:	1ac0      	subs	r0, r0, r3
 8000cda:	2340      	movs	r3, #64	; 0x40
 8000cdc:	4083      	lsls	r3, r0
 8000cde:	4313      	orrs	r3, r2
 8000ce0:	3701      	adds	r7, #1
 8000ce2:	602b      	str	r3, [r5, #0]
 8000ce4:	7839      	ldrb	r1, [r7, #0]
 8000ce6:	1c7b      	adds	r3, r7, #1
 8000ce8:	2206      	movs	r2, #6
 8000cea:	4830      	ldr	r0, [pc, #192]	; (8000dac <_vfiprintf_r+0x268>)
 8000cec:	9303      	str	r3, [sp, #12]
 8000cee:	7629      	strb	r1, [r5, #24]
 8000cf0:	f000 fc82 	bl	80015f8 <memchr>
 8000cf4:	2800      	cmp	r0, #0
 8000cf6:	d045      	beq.n	8000d84 <_vfiprintf_r+0x240>
 8000cf8:	4b2d      	ldr	r3, [pc, #180]	; (8000db0 <_vfiprintf_r+0x26c>)
 8000cfa:	2b00      	cmp	r3, #0
 8000cfc:	d127      	bne.n	8000d4e <_vfiprintf_r+0x20a>
 8000cfe:	2207      	movs	r2, #7
 8000d00:	9b07      	ldr	r3, [sp, #28]
 8000d02:	3307      	adds	r3, #7
 8000d04:	4393      	bics	r3, r2
 8000d06:	3308      	adds	r3, #8
 8000d08:	9307      	str	r3, [sp, #28]
 8000d0a:	696b      	ldr	r3, [r5, #20]
 8000d0c:	9a04      	ldr	r2, [sp, #16]
 8000d0e:	189b      	adds	r3, r3, r2
 8000d10:	616b      	str	r3, [r5, #20]
 8000d12:	e75d      	b.n	8000bd0 <_vfiprintf_r+0x8c>
 8000d14:	210a      	movs	r1, #10
 8000d16:	434b      	muls	r3, r1
 8000d18:	4667      	mov	r7, ip
 8000d1a:	189b      	adds	r3, r3, r2
 8000d1c:	3909      	subs	r1, #9
 8000d1e:	e7a3      	b.n	8000c68 <_vfiprintf_r+0x124>
 8000d20:	2301      	movs	r3, #1
 8000d22:	425b      	negs	r3, r3
 8000d24:	e7ce      	b.n	8000cc4 <_vfiprintf_r+0x180>
 8000d26:	2300      	movs	r3, #0
 8000d28:	001a      	movs	r2, r3
 8000d2a:	3701      	adds	r7, #1
 8000d2c:	606b      	str	r3, [r5, #4]
 8000d2e:	7839      	ldrb	r1, [r7, #0]
 8000d30:	1c78      	adds	r0, r7, #1
 8000d32:	3930      	subs	r1, #48	; 0x30
 8000d34:	4684      	mov	ip, r0
 8000d36:	2909      	cmp	r1, #9
 8000d38:	d903      	bls.n	8000d42 <_vfiprintf_r+0x1fe>
 8000d3a:	2b00      	cmp	r3, #0
 8000d3c:	d0c3      	beq.n	8000cc6 <_vfiprintf_r+0x182>
 8000d3e:	9209      	str	r2, [sp, #36]	; 0x24
 8000d40:	e7c1      	b.n	8000cc6 <_vfiprintf_r+0x182>
 8000d42:	230a      	movs	r3, #10
 8000d44:	435a      	muls	r2, r3
 8000d46:	4667      	mov	r7, ip
 8000d48:	1852      	adds	r2, r2, r1
 8000d4a:	3b09      	subs	r3, #9
 8000d4c:	e7ef      	b.n	8000d2e <_vfiprintf_r+0x1ea>
 8000d4e:	ab07      	add	r3, sp, #28
 8000d50:	9300      	str	r3, [sp, #0]
 8000d52:	0022      	movs	r2, r4
 8000d54:	0029      	movs	r1, r5
 8000d56:	0030      	movs	r0, r6
 8000d58:	4b16      	ldr	r3, [pc, #88]	; (8000db4 <_vfiprintf_r+0x270>)
 8000d5a:	e000      	b.n	8000d5e <_vfiprintf_r+0x21a>
 8000d5c:	bf00      	nop
 8000d5e:	9004      	str	r0, [sp, #16]
 8000d60:	9b04      	ldr	r3, [sp, #16]
 8000d62:	3301      	adds	r3, #1
 8000d64:	d1d1      	bne.n	8000d0a <_vfiprintf_r+0x1c6>
 8000d66:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000d68:	07db      	lsls	r3, r3, #31
 8000d6a:	d405      	bmi.n	8000d78 <_vfiprintf_r+0x234>
 8000d6c:	89a3      	ldrh	r3, [r4, #12]
 8000d6e:	059b      	lsls	r3, r3, #22
 8000d70:	d402      	bmi.n	8000d78 <_vfiprintf_r+0x234>
 8000d72:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000d74:	f7ff fe24 	bl	80009c0 <__retarget_lock_release_recursive>
 8000d78:	89a3      	ldrh	r3, [r4, #12]
 8000d7a:	065b      	lsls	r3, r3, #25
 8000d7c:	d500      	bpl.n	8000d80 <_vfiprintf_r+0x23c>
 8000d7e:	e70a      	b.n	8000b96 <_vfiprintf_r+0x52>
 8000d80:	980d      	ldr	r0, [sp, #52]	; 0x34
 8000d82:	e70a      	b.n	8000b9a <_vfiprintf_r+0x56>
 8000d84:	ab07      	add	r3, sp, #28
 8000d86:	9300      	str	r3, [sp, #0]
 8000d88:	0022      	movs	r2, r4
 8000d8a:	0029      	movs	r1, r5
 8000d8c:	0030      	movs	r0, r6
 8000d8e:	4b09      	ldr	r3, [pc, #36]	; (8000db4 <_vfiprintf_r+0x270>)
 8000d90:	f000 f882 	bl	8000e98 <_printf_i>
 8000d94:	e7e3      	b.n	8000d5e <_vfiprintf_r+0x21a>
 8000d96:	46c0      	nop			; (mov r8, r8)
 8000d98:	08001784 	.word	0x08001784
 8000d9c:	080017a4 	.word	0x080017a4
 8000da0:	08001764 	.word	0x08001764
 8000da4:	080017c4 	.word	0x080017c4
 8000da8:	080017ca 	.word	0x080017ca
 8000dac:	080017ce 	.word	0x080017ce
 8000db0:	00000000 	.word	0x00000000
 8000db4:	08000b1f 	.word	0x08000b1f

08000db8 <_printf_common>:
 8000db8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000dba:	0015      	movs	r5, r2
 8000dbc:	9301      	str	r3, [sp, #4]
 8000dbe:	688a      	ldr	r2, [r1, #8]
 8000dc0:	690b      	ldr	r3, [r1, #16]
 8000dc2:	000c      	movs	r4, r1
 8000dc4:	9000      	str	r0, [sp, #0]
 8000dc6:	4293      	cmp	r3, r2
 8000dc8:	da00      	bge.n	8000dcc <_printf_common+0x14>
 8000dca:	0013      	movs	r3, r2
 8000dcc:	0022      	movs	r2, r4
 8000dce:	602b      	str	r3, [r5, #0]
 8000dd0:	3243      	adds	r2, #67	; 0x43
 8000dd2:	7812      	ldrb	r2, [r2, #0]
 8000dd4:	2a00      	cmp	r2, #0
 8000dd6:	d001      	beq.n	8000ddc <_printf_common+0x24>
 8000dd8:	3301      	adds	r3, #1
 8000dda:	602b      	str	r3, [r5, #0]
 8000ddc:	6823      	ldr	r3, [r4, #0]
 8000dde:	069b      	lsls	r3, r3, #26
 8000de0:	d502      	bpl.n	8000de8 <_printf_common+0x30>
 8000de2:	682b      	ldr	r3, [r5, #0]
 8000de4:	3302      	adds	r3, #2
 8000de6:	602b      	str	r3, [r5, #0]
 8000de8:	6822      	ldr	r2, [r4, #0]
 8000dea:	2306      	movs	r3, #6
 8000dec:	0017      	movs	r7, r2
 8000dee:	401f      	ands	r7, r3
 8000df0:	421a      	tst	r2, r3
 8000df2:	d027      	beq.n	8000e44 <_printf_common+0x8c>
 8000df4:	0023      	movs	r3, r4
 8000df6:	3343      	adds	r3, #67	; 0x43
 8000df8:	781b      	ldrb	r3, [r3, #0]
 8000dfa:	1e5a      	subs	r2, r3, #1
 8000dfc:	4193      	sbcs	r3, r2
 8000dfe:	6822      	ldr	r2, [r4, #0]
 8000e00:	0692      	lsls	r2, r2, #26
 8000e02:	d430      	bmi.n	8000e66 <_printf_common+0xae>
 8000e04:	0022      	movs	r2, r4
 8000e06:	9901      	ldr	r1, [sp, #4]
 8000e08:	9800      	ldr	r0, [sp, #0]
 8000e0a:	9e08      	ldr	r6, [sp, #32]
 8000e0c:	3243      	adds	r2, #67	; 0x43
 8000e0e:	47b0      	blx	r6
 8000e10:	1c43      	adds	r3, r0, #1
 8000e12:	d025      	beq.n	8000e60 <_printf_common+0xa8>
 8000e14:	2306      	movs	r3, #6
 8000e16:	6820      	ldr	r0, [r4, #0]
 8000e18:	682a      	ldr	r2, [r5, #0]
 8000e1a:	68e1      	ldr	r1, [r4, #12]
 8000e1c:	2500      	movs	r5, #0
 8000e1e:	4003      	ands	r3, r0
 8000e20:	2b04      	cmp	r3, #4
 8000e22:	d103      	bne.n	8000e2c <_printf_common+0x74>
 8000e24:	1a8d      	subs	r5, r1, r2
 8000e26:	43eb      	mvns	r3, r5
 8000e28:	17db      	asrs	r3, r3, #31
 8000e2a:	401d      	ands	r5, r3
 8000e2c:	68a3      	ldr	r3, [r4, #8]
 8000e2e:	6922      	ldr	r2, [r4, #16]
 8000e30:	4293      	cmp	r3, r2
 8000e32:	dd01      	ble.n	8000e38 <_printf_common+0x80>
 8000e34:	1a9b      	subs	r3, r3, r2
 8000e36:	18ed      	adds	r5, r5, r3
 8000e38:	2700      	movs	r7, #0
 8000e3a:	42bd      	cmp	r5, r7
 8000e3c:	d120      	bne.n	8000e80 <_printf_common+0xc8>
 8000e3e:	2000      	movs	r0, #0
 8000e40:	e010      	b.n	8000e64 <_printf_common+0xac>
 8000e42:	3701      	adds	r7, #1
 8000e44:	68e3      	ldr	r3, [r4, #12]
 8000e46:	682a      	ldr	r2, [r5, #0]
 8000e48:	1a9b      	subs	r3, r3, r2
 8000e4a:	42bb      	cmp	r3, r7
 8000e4c:	ddd2      	ble.n	8000df4 <_printf_common+0x3c>
 8000e4e:	0022      	movs	r2, r4
 8000e50:	2301      	movs	r3, #1
 8000e52:	9901      	ldr	r1, [sp, #4]
 8000e54:	9800      	ldr	r0, [sp, #0]
 8000e56:	9e08      	ldr	r6, [sp, #32]
 8000e58:	3219      	adds	r2, #25
 8000e5a:	47b0      	blx	r6
 8000e5c:	1c43      	adds	r3, r0, #1
 8000e5e:	d1f0      	bne.n	8000e42 <_printf_common+0x8a>
 8000e60:	2001      	movs	r0, #1
 8000e62:	4240      	negs	r0, r0
 8000e64:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000e66:	2030      	movs	r0, #48	; 0x30
 8000e68:	18e1      	adds	r1, r4, r3
 8000e6a:	3143      	adds	r1, #67	; 0x43
 8000e6c:	7008      	strb	r0, [r1, #0]
 8000e6e:	0021      	movs	r1, r4
 8000e70:	1c5a      	adds	r2, r3, #1
 8000e72:	3145      	adds	r1, #69	; 0x45
 8000e74:	7809      	ldrb	r1, [r1, #0]
 8000e76:	18a2      	adds	r2, r4, r2
 8000e78:	3243      	adds	r2, #67	; 0x43
 8000e7a:	3302      	adds	r3, #2
 8000e7c:	7011      	strb	r1, [r2, #0]
 8000e7e:	e7c1      	b.n	8000e04 <_printf_common+0x4c>
 8000e80:	0022      	movs	r2, r4
 8000e82:	2301      	movs	r3, #1
 8000e84:	9901      	ldr	r1, [sp, #4]
 8000e86:	9800      	ldr	r0, [sp, #0]
 8000e88:	9e08      	ldr	r6, [sp, #32]
 8000e8a:	321a      	adds	r2, #26
 8000e8c:	47b0      	blx	r6
 8000e8e:	1c43      	adds	r3, r0, #1
 8000e90:	d0e6      	beq.n	8000e60 <_printf_common+0xa8>
 8000e92:	3701      	adds	r7, #1
 8000e94:	e7d1      	b.n	8000e3a <_printf_common+0x82>
	...

08000e98 <_printf_i>:
 8000e98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e9a:	b08b      	sub	sp, #44	; 0x2c
 8000e9c:	9206      	str	r2, [sp, #24]
 8000e9e:	000a      	movs	r2, r1
 8000ea0:	3243      	adds	r2, #67	; 0x43
 8000ea2:	9307      	str	r3, [sp, #28]
 8000ea4:	9005      	str	r0, [sp, #20]
 8000ea6:	9204      	str	r2, [sp, #16]
 8000ea8:	7e0a      	ldrb	r2, [r1, #24]
 8000eaa:	000c      	movs	r4, r1
 8000eac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8000eae:	2a78      	cmp	r2, #120	; 0x78
 8000eb0:	d807      	bhi.n	8000ec2 <_printf_i+0x2a>
 8000eb2:	2a62      	cmp	r2, #98	; 0x62
 8000eb4:	d809      	bhi.n	8000eca <_printf_i+0x32>
 8000eb6:	2a00      	cmp	r2, #0
 8000eb8:	d100      	bne.n	8000ebc <_printf_i+0x24>
 8000eba:	e0c1      	b.n	8001040 <_printf_i+0x1a8>
 8000ebc:	2a58      	cmp	r2, #88	; 0x58
 8000ebe:	d100      	bne.n	8000ec2 <_printf_i+0x2a>
 8000ec0:	e08c      	b.n	8000fdc <_printf_i+0x144>
 8000ec2:	0026      	movs	r6, r4
 8000ec4:	3642      	adds	r6, #66	; 0x42
 8000ec6:	7032      	strb	r2, [r6, #0]
 8000ec8:	e022      	b.n	8000f10 <_printf_i+0x78>
 8000eca:	0010      	movs	r0, r2
 8000ecc:	3863      	subs	r0, #99	; 0x63
 8000ece:	2815      	cmp	r0, #21
 8000ed0:	d8f7      	bhi.n	8000ec2 <_printf_i+0x2a>
 8000ed2:	f7ff f919 	bl	8000108 <__gnu_thumb1_case_shi>
 8000ed6:	0016      	.short	0x0016
 8000ed8:	fff6001f 	.word	0xfff6001f
 8000edc:	fff6fff6 	.word	0xfff6fff6
 8000ee0:	001ffff6 	.word	0x001ffff6
 8000ee4:	fff6fff6 	.word	0xfff6fff6
 8000ee8:	fff6fff6 	.word	0xfff6fff6
 8000eec:	003600a8 	.word	0x003600a8
 8000ef0:	fff6009a 	.word	0xfff6009a
 8000ef4:	00b9fff6 	.word	0x00b9fff6
 8000ef8:	0036fff6 	.word	0x0036fff6
 8000efc:	fff6fff6 	.word	0xfff6fff6
 8000f00:	009e      	.short	0x009e
 8000f02:	0026      	movs	r6, r4
 8000f04:	681a      	ldr	r2, [r3, #0]
 8000f06:	3642      	adds	r6, #66	; 0x42
 8000f08:	1d11      	adds	r1, r2, #4
 8000f0a:	6019      	str	r1, [r3, #0]
 8000f0c:	6813      	ldr	r3, [r2, #0]
 8000f0e:	7033      	strb	r3, [r6, #0]
 8000f10:	2301      	movs	r3, #1
 8000f12:	e0a7      	b.n	8001064 <_printf_i+0x1cc>
 8000f14:	6808      	ldr	r0, [r1, #0]
 8000f16:	6819      	ldr	r1, [r3, #0]
 8000f18:	1d0a      	adds	r2, r1, #4
 8000f1a:	0605      	lsls	r5, r0, #24
 8000f1c:	d50b      	bpl.n	8000f36 <_printf_i+0x9e>
 8000f1e:	680d      	ldr	r5, [r1, #0]
 8000f20:	601a      	str	r2, [r3, #0]
 8000f22:	2d00      	cmp	r5, #0
 8000f24:	da03      	bge.n	8000f2e <_printf_i+0x96>
 8000f26:	232d      	movs	r3, #45	; 0x2d
 8000f28:	9a04      	ldr	r2, [sp, #16]
 8000f2a:	426d      	negs	r5, r5
 8000f2c:	7013      	strb	r3, [r2, #0]
 8000f2e:	4b61      	ldr	r3, [pc, #388]	; (80010b4 <_printf_i+0x21c>)
 8000f30:	270a      	movs	r7, #10
 8000f32:	9303      	str	r3, [sp, #12]
 8000f34:	e01b      	b.n	8000f6e <_printf_i+0xd6>
 8000f36:	680d      	ldr	r5, [r1, #0]
 8000f38:	601a      	str	r2, [r3, #0]
 8000f3a:	0641      	lsls	r1, r0, #25
 8000f3c:	d5f1      	bpl.n	8000f22 <_printf_i+0x8a>
 8000f3e:	b22d      	sxth	r5, r5
 8000f40:	e7ef      	b.n	8000f22 <_printf_i+0x8a>
 8000f42:	680d      	ldr	r5, [r1, #0]
 8000f44:	6819      	ldr	r1, [r3, #0]
 8000f46:	1d08      	adds	r0, r1, #4
 8000f48:	6018      	str	r0, [r3, #0]
 8000f4a:	062e      	lsls	r6, r5, #24
 8000f4c:	d501      	bpl.n	8000f52 <_printf_i+0xba>
 8000f4e:	680d      	ldr	r5, [r1, #0]
 8000f50:	e003      	b.n	8000f5a <_printf_i+0xc2>
 8000f52:	066d      	lsls	r5, r5, #25
 8000f54:	d5fb      	bpl.n	8000f4e <_printf_i+0xb6>
 8000f56:	680d      	ldr	r5, [r1, #0]
 8000f58:	b2ad      	uxth	r5, r5
 8000f5a:	4b56      	ldr	r3, [pc, #344]	; (80010b4 <_printf_i+0x21c>)
 8000f5c:	2708      	movs	r7, #8
 8000f5e:	9303      	str	r3, [sp, #12]
 8000f60:	2a6f      	cmp	r2, #111	; 0x6f
 8000f62:	d000      	beq.n	8000f66 <_printf_i+0xce>
 8000f64:	3702      	adds	r7, #2
 8000f66:	0023      	movs	r3, r4
 8000f68:	2200      	movs	r2, #0
 8000f6a:	3343      	adds	r3, #67	; 0x43
 8000f6c:	701a      	strb	r2, [r3, #0]
 8000f6e:	6863      	ldr	r3, [r4, #4]
 8000f70:	60a3      	str	r3, [r4, #8]
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	db03      	blt.n	8000f7e <_printf_i+0xe6>
 8000f76:	2204      	movs	r2, #4
 8000f78:	6821      	ldr	r1, [r4, #0]
 8000f7a:	4391      	bics	r1, r2
 8000f7c:	6021      	str	r1, [r4, #0]
 8000f7e:	2d00      	cmp	r5, #0
 8000f80:	d102      	bne.n	8000f88 <_printf_i+0xf0>
 8000f82:	9e04      	ldr	r6, [sp, #16]
 8000f84:	2b00      	cmp	r3, #0
 8000f86:	d00c      	beq.n	8000fa2 <_printf_i+0x10a>
 8000f88:	9e04      	ldr	r6, [sp, #16]
 8000f8a:	0028      	movs	r0, r5
 8000f8c:	0039      	movs	r1, r7
 8000f8e:	f7ff f94b 	bl	8000228 <__aeabi_uidivmod>
 8000f92:	9b03      	ldr	r3, [sp, #12]
 8000f94:	3e01      	subs	r6, #1
 8000f96:	5c5b      	ldrb	r3, [r3, r1]
 8000f98:	7033      	strb	r3, [r6, #0]
 8000f9a:	002b      	movs	r3, r5
 8000f9c:	0005      	movs	r5, r0
 8000f9e:	429f      	cmp	r7, r3
 8000fa0:	d9f3      	bls.n	8000f8a <_printf_i+0xf2>
 8000fa2:	2f08      	cmp	r7, #8
 8000fa4:	d109      	bne.n	8000fba <_printf_i+0x122>
 8000fa6:	6823      	ldr	r3, [r4, #0]
 8000fa8:	07db      	lsls	r3, r3, #31
 8000faa:	d506      	bpl.n	8000fba <_printf_i+0x122>
 8000fac:	6863      	ldr	r3, [r4, #4]
 8000fae:	6922      	ldr	r2, [r4, #16]
 8000fb0:	4293      	cmp	r3, r2
 8000fb2:	dc02      	bgt.n	8000fba <_printf_i+0x122>
 8000fb4:	2330      	movs	r3, #48	; 0x30
 8000fb6:	3e01      	subs	r6, #1
 8000fb8:	7033      	strb	r3, [r6, #0]
 8000fba:	9b04      	ldr	r3, [sp, #16]
 8000fbc:	1b9b      	subs	r3, r3, r6
 8000fbe:	6123      	str	r3, [r4, #16]
 8000fc0:	9b07      	ldr	r3, [sp, #28]
 8000fc2:	0021      	movs	r1, r4
 8000fc4:	9300      	str	r3, [sp, #0]
 8000fc6:	9805      	ldr	r0, [sp, #20]
 8000fc8:	9b06      	ldr	r3, [sp, #24]
 8000fca:	aa09      	add	r2, sp, #36	; 0x24
 8000fcc:	f7ff fef4 	bl	8000db8 <_printf_common>
 8000fd0:	1c43      	adds	r3, r0, #1
 8000fd2:	d14c      	bne.n	800106e <_printf_i+0x1d6>
 8000fd4:	2001      	movs	r0, #1
 8000fd6:	4240      	negs	r0, r0
 8000fd8:	b00b      	add	sp, #44	; 0x2c
 8000fda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000fdc:	3145      	adds	r1, #69	; 0x45
 8000fde:	700a      	strb	r2, [r1, #0]
 8000fe0:	4a34      	ldr	r2, [pc, #208]	; (80010b4 <_printf_i+0x21c>)
 8000fe2:	9203      	str	r2, [sp, #12]
 8000fe4:	681a      	ldr	r2, [r3, #0]
 8000fe6:	6821      	ldr	r1, [r4, #0]
 8000fe8:	ca20      	ldmia	r2!, {r5}
 8000fea:	601a      	str	r2, [r3, #0]
 8000fec:	0608      	lsls	r0, r1, #24
 8000fee:	d516      	bpl.n	800101e <_printf_i+0x186>
 8000ff0:	07cb      	lsls	r3, r1, #31
 8000ff2:	d502      	bpl.n	8000ffa <_printf_i+0x162>
 8000ff4:	2320      	movs	r3, #32
 8000ff6:	4319      	orrs	r1, r3
 8000ff8:	6021      	str	r1, [r4, #0]
 8000ffa:	2710      	movs	r7, #16
 8000ffc:	2d00      	cmp	r5, #0
 8000ffe:	d1b2      	bne.n	8000f66 <_printf_i+0xce>
 8001000:	2320      	movs	r3, #32
 8001002:	6822      	ldr	r2, [r4, #0]
 8001004:	439a      	bics	r2, r3
 8001006:	6022      	str	r2, [r4, #0]
 8001008:	e7ad      	b.n	8000f66 <_printf_i+0xce>
 800100a:	2220      	movs	r2, #32
 800100c:	6809      	ldr	r1, [r1, #0]
 800100e:	430a      	orrs	r2, r1
 8001010:	6022      	str	r2, [r4, #0]
 8001012:	0022      	movs	r2, r4
 8001014:	2178      	movs	r1, #120	; 0x78
 8001016:	3245      	adds	r2, #69	; 0x45
 8001018:	7011      	strb	r1, [r2, #0]
 800101a:	4a27      	ldr	r2, [pc, #156]	; (80010b8 <_printf_i+0x220>)
 800101c:	e7e1      	b.n	8000fe2 <_printf_i+0x14a>
 800101e:	0648      	lsls	r0, r1, #25
 8001020:	d5e6      	bpl.n	8000ff0 <_printf_i+0x158>
 8001022:	b2ad      	uxth	r5, r5
 8001024:	e7e4      	b.n	8000ff0 <_printf_i+0x158>
 8001026:	681a      	ldr	r2, [r3, #0]
 8001028:	680d      	ldr	r5, [r1, #0]
 800102a:	1d10      	adds	r0, r2, #4
 800102c:	6949      	ldr	r1, [r1, #20]
 800102e:	6018      	str	r0, [r3, #0]
 8001030:	6813      	ldr	r3, [r2, #0]
 8001032:	062e      	lsls	r6, r5, #24
 8001034:	d501      	bpl.n	800103a <_printf_i+0x1a2>
 8001036:	6019      	str	r1, [r3, #0]
 8001038:	e002      	b.n	8001040 <_printf_i+0x1a8>
 800103a:	066d      	lsls	r5, r5, #25
 800103c:	d5fb      	bpl.n	8001036 <_printf_i+0x19e>
 800103e:	8019      	strh	r1, [r3, #0]
 8001040:	2300      	movs	r3, #0
 8001042:	9e04      	ldr	r6, [sp, #16]
 8001044:	6123      	str	r3, [r4, #16]
 8001046:	e7bb      	b.n	8000fc0 <_printf_i+0x128>
 8001048:	681a      	ldr	r2, [r3, #0]
 800104a:	1d11      	adds	r1, r2, #4
 800104c:	6019      	str	r1, [r3, #0]
 800104e:	6816      	ldr	r6, [r2, #0]
 8001050:	2100      	movs	r1, #0
 8001052:	0030      	movs	r0, r6
 8001054:	6862      	ldr	r2, [r4, #4]
 8001056:	f000 facf 	bl	80015f8 <memchr>
 800105a:	2800      	cmp	r0, #0
 800105c:	d001      	beq.n	8001062 <_printf_i+0x1ca>
 800105e:	1b80      	subs	r0, r0, r6
 8001060:	6060      	str	r0, [r4, #4]
 8001062:	6863      	ldr	r3, [r4, #4]
 8001064:	6123      	str	r3, [r4, #16]
 8001066:	2300      	movs	r3, #0
 8001068:	9a04      	ldr	r2, [sp, #16]
 800106a:	7013      	strb	r3, [r2, #0]
 800106c:	e7a8      	b.n	8000fc0 <_printf_i+0x128>
 800106e:	6923      	ldr	r3, [r4, #16]
 8001070:	0032      	movs	r2, r6
 8001072:	9906      	ldr	r1, [sp, #24]
 8001074:	9805      	ldr	r0, [sp, #20]
 8001076:	9d07      	ldr	r5, [sp, #28]
 8001078:	47a8      	blx	r5
 800107a:	1c43      	adds	r3, r0, #1
 800107c:	d0aa      	beq.n	8000fd4 <_printf_i+0x13c>
 800107e:	6823      	ldr	r3, [r4, #0]
 8001080:	079b      	lsls	r3, r3, #30
 8001082:	d415      	bmi.n	80010b0 <_printf_i+0x218>
 8001084:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001086:	68e0      	ldr	r0, [r4, #12]
 8001088:	4298      	cmp	r0, r3
 800108a:	daa5      	bge.n	8000fd8 <_printf_i+0x140>
 800108c:	0018      	movs	r0, r3
 800108e:	e7a3      	b.n	8000fd8 <_printf_i+0x140>
 8001090:	0022      	movs	r2, r4
 8001092:	2301      	movs	r3, #1
 8001094:	9906      	ldr	r1, [sp, #24]
 8001096:	9805      	ldr	r0, [sp, #20]
 8001098:	9e07      	ldr	r6, [sp, #28]
 800109a:	3219      	adds	r2, #25
 800109c:	47b0      	blx	r6
 800109e:	1c43      	adds	r3, r0, #1
 80010a0:	d098      	beq.n	8000fd4 <_printf_i+0x13c>
 80010a2:	3501      	adds	r5, #1
 80010a4:	68e3      	ldr	r3, [r4, #12]
 80010a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80010a8:	1a9b      	subs	r3, r3, r2
 80010aa:	42ab      	cmp	r3, r5
 80010ac:	dcf0      	bgt.n	8001090 <_printf_i+0x1f8>
 80010ae:	e7e9      	b.n	8001084 <_printf_i+0x1ec>
 80010b0:	2500      	movs	r5, #0
 80010b2:	e7f7      	b.n	80010a4 <_printf_i+0x20c>
 80010b4:	080017d5 	.word	0x080017d5
 80010b8:	080017e6 	.word	0x080017e6

080010bc <_sbrk_r>:
 80010bc:	2300      	movs	r3, #0
 80010be:	b570      	push	{r4, r5, r6, lr}
 80010c0:	4d06      	ldr	r5, [pc, #24]	; (80010dc <_sbrk_r+0x20>)
 80010c2:	0004      	movs	r4, r0
 80010c4:	0008      	movs	r0, r1
 80010c6:	602b      	str	r3, [r5, #0]
 80010c8:	f7ff fa2a 	bl	8000520 <_sbrk>
 80010cc:	1c43      	adds	r3, r0, #1
 80010ce:	d103      	bne.n	80010d8 <_sbrk_r+0x1c>
 80010d0:	682b      	ldr	r3, [r5, #0]
 80010d2:	2b00      	cmp	r3, #0
 80010d4:	d000      	beq.n	80010d8 <_sbrk_r+0x1c>
 80010d6:	6023      	str	r3, [r4, #0]
 80010d8:	bd70      	pop	{r4, r5, r6, pc}
 80010da:	46c0      	nop			; (mov r8, r8)
 80010dc:	20000094 	.word	0x20000094

080010e0 <__sread>:
 80010e0:	b570      	push	{r4, r5, r6, lr}
 80010e2:	000c      	movs	r4, r1
 80010e4:	250e      	movs	r5, #14
 80010e6:	5f49      	ldrsh	r1, [r1, r5]
 80010e8:	f000 faec 	bl	80016c4 <_read_r>
 80010ec:	2800      	cmp	r0, #0
 80010ee:	db03      	blt.n	80010f8 <__sread+0x18>
 80010f0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80010f2:	181b      	adds	r3, r3, r0
 80010f4:	6563      	str	r3, [r4, #84]	; 0x54
 80010f6:	bd70      	pop	{r4, r5, r6, pc}
 80010f8:	89a3      	ldrh	r3, [r4, #12]
 80010fa:	4a02      	ldr	r2, [pc, #8]	; (8001104 <__sread+0x24>)
 80010fc:	4013      	ands	r3, r2
 80010fe:	81a3      	strh	r3, [r4, #12]
 8001100:	e7f9      	b.n	80010f6 <__sread+0x16>
 8001102:	46c0      	nop			; (mov r8, r8)
 8001104:	ffffefff 	.word	0xffffefff

08001108 <__swrite>:
 8001108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800110a:	001f      	movs	r7, r3
 800110c:	898b      	ldrh	r3, [r1, #12]
 800110e:	0005      	movs	r5, r0
 8001110:	000c      	movs	r4, r1
 8001112:	0016      	movs	r6, r2
 8001114:	05db      	lsls	r3, r3, #23
 8001116:	d505      	bpl.n	8001124 <__swrite+0x1c>
 8001118:	230e      	movs	r3, #14
 800111a:	5ec9      	ldrsh	r1, [r1, r3]
 800111c:	2200      	movs	r2, #0
 800111e:	2302      	movs	r3, #2
 8001120:	f000 f9ea 	bl	80014f8 <_lseek_r>
 8001124:	89a3      	ldrh	r3, [r4, #12]
 8001126:	4a05      	ldr	r2, [pc, #20]	; (800113c <__swrite+0x34>)
 8001128:	0028      	movs	r0, r5
 800112a:	4013      	ands	r3, r2
 800112c:	81a3      	strh	r3, [r4, #12]
 800112e:	0032      	movs	r2, r6
 8001130:	230e      	movs	r3, #14
 8001132:	5ee1      	ldrsh	r1, [r4, r3]
 8001134:	003b      	movs	r3, r7
 8001136:	f000 f875 	bl	8001224 <_write_r>
 800113a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800113c:	ffffefff 	.word	0xffffefff

08001140 <__sseek>:
 8001140:	b570      	push	{r4, r5, r6, lr}
 8001142:	000c      	movs	r4, r1
 8001144:	250e      	movs	r5, #14
 8001146:	5f49      	ldrsh	r1, [r1, r5]
 8001148:	f000 f9d6 	bl	80014f8 <_lseek_r>
 800114c:	89a3      	ldrh	r3, [r4, #12]
 800114e:	1c42      	adds	r2, r0, #1
 8001150:	d103      	bne.n	800115a <__sseek+0x1a>
 8001152:	4a05      	ldr	r2, [pc, #20]	; (8001168 <__sseek+0x28>)
 8001154:	4013      	ands	r3, r2
 8001156:	81a3      	strh	r3, [r4, #12]
 8001158:	bd70      	pop	{r4, r5, r6, pc}
 800115a:	2280      	movs	r2, #128	; 0x80
 800115c:	0152      	lsls	r2, r2, #5
 800115e:	4313      	orrs	r3, r2
 8001160:	81a3      	strh	r3, [r4, #12]
 8001162:	6560      	str	r0, [r4, #84]	; 0x54
 8001164:	e7f8      	b.n	8001158 <__sseek+0x18>
 8001166:	46c0      	nop			; (mov r8, r8)
 8001168:	ffffefff 	.word	0xffffefff

0800116c <__sclose>:
 800116c:	b510      	push	{r4, lr}
 800116e:	230e      	movs	r3, #14
 8001170:	5ec9      	ldrsh	r1, [r1, r3]
 8001172:	f000 f8e3 	bl	800133c <_close_r>
 8001176:	bd10      	pop	{r4, pc}

08001178 <__swbuf_r>:
 8001178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800117a:	0005      	movs	r5, r0
 800117c:	000e      	movs	r6, r1
 800117e:	0014      	movs	r4, r2
 8001180:	2800      	cmp	r0, #0
 8001182:	d004      	beq.n	800118e <__swbuf_r+0x16>
 8001184:	6983      	ldr	r3, [r0, #24]
 8001186:	2b00      	cmp	r3, #0
 8001188:	d101      	bne.n	800118e <__swbuf_r+0x16>
 800118a:	f7ff fb77 	bl	800087c <__sinit>
 800118e:	4b22      	ldr	r3, [pc, #136]	; (8001218 <__swbuf_r+0xa0>)
 8001190:	429c      	cmp	r4, r3
 8001192:	d12e      	bne.n	80011f2 <__swbuf_r+0x7a>
 8001194:	686c      	ldr	r4, [r5, #4]
 8001196:	69a3      	ldr	r3, [r4, #24]
 8001198:	60a3      	str	r3, [r4, #8]
 800119a:	89a3      	ldrh	r3, [r4, #12]
 800119c:	071b      	lsls	r3, r3, #28
 800119e:	d532      	bpl.n	8001206 <__swbuf_r+0x8e>
 80011a0:	6923      	ldr	r3, [r4, #16]
 80011a2:	2b00      	cmp	r3, #0
 80011a4:	d02f      	beq.n	8001206 <__swbuf_r+0x8e>
 80011a6:	6823      	ldr	r3, [r4, #0]
 80011a8:	6922      	ldr	r2, [r4, #16]
 80011aa:	b2f7      	uxtb	r7, r6
 80011ac:	1a98      	subs	r0, r3, r2
 80011ae:	6963      	ldr	r3, [r4, #20]
 80011b0:	b2f6      	uxtb	r6, r6
 80011b2:	4283      	cmp	r3, r0
 80011b4:	dc05      	bgt.n	80011c2 <__swbuf_r+0x4a>
 80011b6:	0021      	movs	r1, r4
 80011b8:	0028      	movs	r0, r5
 80011ba:	f000 f95d 	bl	8001478 <_fflush_r>
 80011be:	2800      	cmp	r0, #0
 80011c0:	d127      	bne.n	8001212 <__swbuf_r+0x9a>
 80011c2:	68a3      	ldr	r3, [r4, #8]
 80011c4:	3001      	adds	r0, #1
 80011c6:	3b01      	subs	r3, #1
 80011c8:	60a3      	str	r3, [r4, #8]
 80011ca:	6823      	ldr	r3, [r4, #0]
 80011cc:	1c5a      	adds	r2, r3, #1
 80011ce:	6022      	str	r2, [r4, #0]
 80011d0:	701f      	strb	r7, [r3, #0]
 80011d2:	6963      	ldr	r3, [r4, #20]
 80011d4:	4283      	cmp	r3, r0
 80011d6:	d004      	beq.n	80011e2 <__swbuf_r+0x6a>
 80011d8:	89a3      	ldrh	r3, [r4, #12]
 80011da:	07db      	lsls	r3, r3, #31
 80011dc:	d507      	bpl.n	80011ee <__swbuf_r+0x76>
 80011de:	2e0a      	cmp	r6, #10
 80011e0:	d105      	bne.n	80011ee <__swbuf_r+0x76>
 80011e2:	0021      	movs	r1, r4
 80011e4:	0028      	movs	r0, r5
 80011e6:	f000 f947 	bl	8001478 <_fflush_r>
 80011ea:	2800      	cmp	r0, #0
 80011ec:	d111      	bne.n	8001212 <__swbuf_r+0x9a>
 80011ee:	0030      	movs	r0, r6
 80011f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011f2:	4b0a      	ldr	r3, [pc, #40]	; (800121c <__swbuf_r+0xa4>)
 80011f4:	429c      	cmp	r4, r3
 80011f6:	d101      	bne.n	80011fc <__swbuf_r+0x84>
 80011f8:	68ac      	ldr	r4, [r5, #8]
 80011fa:	e7cc      	b.n	8001196 <__swbuf_r+0x1e>
 80011fc:	4b08      	ldr	r3, [pc, #32]	; (8001220 <__swbuf_r+0xa8>)
 80011fe:	429c      	cmp	r4, r3
 8001200:	d1c9      	bne.n	8001196 <__swbuf_r+0x1e>
 8001202:	68ec      	ldr	r4, [r5, #12]
 8001204:	e7c7      	b.n	8001196 <__swbuf_r+0x1e>
 8001206:	0021      	movs	r1, r4
 8001208:	0028      	movs	r0, r5
 800120a:	f000 f81f 	bl	800124c <__swsetup_r>
 800120e:	2800      	cmp	r0, #0
 8001210:	d0c9      	beq.n	80011a6 <__swbuf_r+0x2e>
 8001212:	2601      	movs	r6, #1
 8001214:	4276      	negs	r6, r6
 8001216:	e7ea      	b.n	80011ee <__swbuf_r+0x76>
 8001218:	08001784 	.word	0x08001784
 800121c:	080017a4 	.word	0x080017a4
 8001220:	08001764 	.word	0x08001764

08001224 <_write_r>:
 8001224:	b570      	push	{r4, r5, r6, lr}
 8001226:	0004      	movs	r4, r0
 8001228:	0008      	movs	r0, r1
 800122a:	0011      	movs	r1, r2
 800122c:	001a      	movs	r2, r3
 800122e:	2300      	movs	r3, #0
 8001230:	4d05      	ldr	r5, [pc, #20]	; (8001248 <_write_r+0x24>)
 8001232:	602b      	str	r3, [r5, #0]
 8001234:	f7ff f92b 	bl	800048e <_write>
 8001238:	1c43      	adds	r3, r0, #1
 800123a:	d103      	bne.n	8001244 <_write_r+0x20>
 800123c:	682b      	ldr	r3, [r5, #0]
 800123e:	2b00      	cmp	r3, #0
 8001240:	d000      	beq.n	8001244 <_write_r+0x20>
 8001242:	6023      	str	r3, [r4, #0]
 8001244:	bd70      	pop	{r4, r5, r6, pc}
 8001246:	46c0      	nop			; (mov r8, r8)
 8001248:	20000094 	.word	0x20000094

0800124c <__swsetup_r>:
 800124c:	4b37      	ldr	r3, [pc, #220]	; (800132c <__swsetup_r+0xe0>)
 800124e:	b570      	push	{r4, r5, r6, lr}
 8001250:	681d      	ldr	r5, [r3, #0]
 8001252:	0006      	movs	r6, r0
 8001254:	000c      	movs	r4, r1
 8001256:	2d00      	cmp	r5, #0
 8001258:	d005      	beq.n	8001266 <__swsetup_r+0x1a>
 800125a:	69ab      	ldr	r3, [r5, #24]
 800125c:	2b00      	cmp	r3, #0
 800125e:	d102      	bne.n	8001266 <__swsetup_r+0x1a>
 8001260:	0028      	movs	r0, r5
 8001262:	f7ff fb0b 	bl	800087c <__sinit>
 8001266:	4b32      	ldr	r3, [pc, #200]	; (8001330 <__swsetup_r+0xe4>)
 8001268:	429c      	cmp	r4, r3
 800126a:	d10f      	bne.n	800128c <__swsetup_r+0x40>
 800126c:	686c      	ldr	r4, [r5, #4]
 800126e:	230c      	movs	r3, #12
 8001270:	5ee2      	ldrsh	r2, [r4, r3]
 8001272:	b293      	uxth	r3, r2
 8001274:	0711      	lsls	r1, r2, #28
 8001276:	d42d      	bmi.n	80012d4 <__swsetup_r+0x88>
 8001278:	06d9      	lsls	r1, r3, #27
 800127a:	d411      	bmi.n	80012a0 <__swsetup_r+0x54>
 800127c:	2309      	movs	r3, #9
 800127e:	2001      	movs	r0, #1
 8001280:	6033      	str	r3, [r6, #0]
 8001282:	3337      	adds	r3, #55	; 0x37
 8001284:	4313      	orrs	r3, r2
 8001286:	81a3      	strh	r3, [r4, #12]
 8001288:	4240      	negs	r0, r0
 800128a:	bd70      	pop	{r4, r5, r6, pc}
 800128c:	4b29      	ldr	r3, [pc, #164]	; (8001334 <__swsetup_r+0xe8>)
 800128e:	429c      	cmp	r4, r3
 8001290:	d101      	bne.n	8001296 <__swsetup_r+0x4a>
 8001292:	68ac      	ldr	r4, [r5, #8]
 8001294:	e7eb      	b.n	800126e <__swsetup_r+0x22>
 8001296:	4b28      	ldr	r3, [pc, #160]	; (8001338 <__swsetup_r+0xec>)
 8001298:	429c      	cmp	r4, r3
 800129a:	d1e8      	bne.n	800126e <__swsetup_r+0x22>
 800129c:	68ec      	ldr	r4, [r5, #12]
 800129e:	e7e6      	b.n	800126e <__swsetup_r+0x22>
 80012a0:	075b      	lsls	r3, r3, #29
 80012a2:	d513      	bpl.n	80012cc <__swsetup_r+0x80>
 80012a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012a6:	2900      	cmp	r1, #0
 80012a8:	d008      	beq.n	80012bc <__swsetup_r+0x70>
 80012aa:	0023      	movs	r3, r4
 80012ac:	3344      	adds	r3, #68	; 0x44
 80012ae:	4299      	cmp	r1, r3
 80012b0:	d002      	beq.n	80012b8 <__swsetup_r+0x6c>
 80012b2:	0030      	movs	r0, r6
 80012b4:	f000 f9bc 	bl	8001630 <_free_r>
 80012b8:	2300      	movs	r3, #0
 80012ba:	6363      	str	r3, [r4, #52]	; 0x34
 80012bc:	2224      	movs	r2, #36	; 0x24
 80012be:	89a3      	ldrh	r3, [r4, #12]
 80012c0:	4393      	bics	r3, r2
 80012c2:	81a3      	strh	r3, [r4, #12]
 80012c4:	2300      	movs	r3, #0
 80012c6:	6063      	str	r3, [r4, #4]
 80012c8:	6923      	ldr	r3, [r4, #16]
 80012ca:	6023      	str	r3, [r4, #0]
 80012cc:	2308      	movs	r3, #8
 80012ce:	89a2      	ldrh	r2, [r4, #12]
 80012d0:	4313      	orrs	r3, r2
 80012d2:	81a3      	strh	r3, [r4, #12]
 80012d4:	6923      	ldr	r3, [r4, #16]
 80012d6:	2b00      	cmp	r3, #0
 80012d8:	d10b      	bne.n	80012f2 <__swsetup_r+0xa6>
 80012da:	21a0      	movs	r1, #160	; 0xa0
 80012dc:	2280      	movs	r2, #128	; 0x80
 80012de:	89a3      	ldrh	r3, [r4, #12]
 80012e0:	0089      	lsls	r1, r1, #2
 80012e2:	0092      	lsls	r2, r2, #2
 80012e4:	400b      	ands	r3, r1
 80012e6:	4293      	cmp	r3, r2
 80012e8:	d003      	beq.n	80012f2 <__swsetup_r+0xa6>
 80012ea:	0021      	movs	r1, r4
 80012ec:	0030      	movs	r0, r6
 80012ee:	f000 f93f 	bl	8001570 <__smakebuf_r>
 80012f2:	220c      	movs	r2, #12
 80012f4:	5ea3      	ldrsh	r3, [r4, r2]
 80012f6:	2001      	movs	r0, #1
 80012f8:	001a      	movs	r2, r3
 80012fa:	b299      	uxth	r1, r3
 80012fc:	4002      	ands	r2, r0
 80012fe:	4203      	tst	r3, r0
 8001300:	d00f      	beq.n	8001322 <__swsetup_r+0xd6>
 8001302:	2200      	movs	r2, #0
 8001304:	60a2      	str	r2, [r4, #8]
 8001306:	6962      	ldr	r2, [r4, #20]
 8001308:	4252      	negs	r2, r2
 800130a:	61a2      	str	r2, [r4, #24]
 800130c:	2000      	movs	r0, #0
 800130e:	6922      	ldr	r2, [r4, #16]
 8001310:	4282      	cmp	r2, r0
 8001312:	d1ba      	bne.n	800128a <__swsetup_r+0x3e>
 8001314:	060a      	lsls	r2, r1, #24
 8001316:	d5b8      	bpl.n	800128a <__swsetup_r+0x3e>
 8001318:	2240      	movs	r2, #64	; 0x40
 800131a:	4313      	orrs	r3, r2
 800131c:	81a3      	strh	r3, [r4, #12]
 800131e:	3801      	subs	r0, #1
 8001320:	e7b3      	b.n	800128a <__swsetup_r+0x3e>
 8001322:	0788      	lsls	r0, r1, #30
 8001324:	d400      	bmi.n	8001328 <__swsetup_r+0xdc>
 8001326:	6962      	ldr	r2, [r4, #20]
 8001328:	60a2      	str	r2, [r4, #8]
 800132a:	e7ef      	b.n	800130c <__swsetup_r+0xc0>
 800132c:	20000000 	.word	0x20000000
 8001330:	08001784 	.word	0x08001784
 8001334:	080017a4 	.word	0x080017a4
 8001338:	08001764 	.word	0x08001764

0800133c <_close_r>:
 800133c:	2300      	movs	r3, #0
 800133e:	b570      	push	{r4, r5, r6, lr}
 8001340:	4d06      	ldr	r5, [pc, #24]	; (800135c <_close_r+0x20>)
 8001342:	0004      	movs	r4, r0
 8001344:	0008      	movs	r0, r1
 8001346:	602b      	str	r3, [r5, #0]
 8001348:	f7ff f8bd 	bl	80004c6 <_close>
 800134c:	1c43      	adds	r3, r0, #1
 800134e:	d103      	bne.n	8001358 <_close_r+0x1c>
 8001350:	682b      	ldr	r3, [r5, #0]
 8001352:	2b00      	cmp	r3, #0
 8001354:	d000      	beq.n	8001358 <_close_r+0x1c>
 8001356:	6023      	str	r3, [r4, #0]
 8001358:	bd70      	pop	{r4, r5, r6, pc}
 800135a:	46c0      	nop			; (mov r8, r8)
 800135c:	20000094 	.word	0x20000094

08001360 <__sflush_r>:
 8001360:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001362:	898b      	ldrh	r3, [r1, #12]
 8001364:	0005      	movs	r5, r0
 8001366:	000c      	movs	r4, r1
 8001368:	071a      	lsls	r2, r3, #28
 800136a:	d45f      	bmi.n	800142c <__sflush_r+0xcc>
 800136c:	684a      	ldr	r2, [r1, #4]
 800136e:	2a00      	cmp	r2, #0
 8001370:	dc04      	bgt.n	800137c <__sflush_r+0x1c>
 8001372:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8001374:	2a00      	cmp	r2, #0
 8001376:	dc01      	bgt.n	800137c <__sflush_r+0x1c>
 8001378:	2000      	movs	r0, #0
 800137a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800137c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800137e:	2f00      	cmp	r7, #0
 8001380:	d0fa      	beq.n	8001378 <__sflush_r+0x18>
 8001382:	2200      	movs	r2, #0
 8001384:	2180      	movs	r1, #128	; 0x80
 8001386:	682e      	ldr	r6, [r5, #0]
 8001388:	602a      	str	r2, [r5, #0]
 800138a:	001a      	movs	r2, r3
 800138c:	0149      	lsls	r1, r1, #5
 800138e:	400a      	ands	r2, r1
 8001390:	420b      	tst	r3, r1
 8001392:	d034      	beq.n	80013fe <__sflush_r+0x9e>
 8001394:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001396:	89a3      	ldrh	r3, [r4, #12]
 8001398:	075b      	lsls	r3, r3, #29
 800139a:	d506      	bpl.n	80013aa <__sflush_r+0x4a>
 800139c:	6863      	ldr	r3, [r4, #4]
 800139e:	1ac0      	subs	r0, r0, r3
 80013a0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80013a2:	2b00      	cmp	r3, #0
 80013a4:	d001      	beq.n	80013aa <__sflush_r+0x4a>
 80013a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80013a8:	1ac0      	subs	r0, r0, r3
 80013aa:	0002      	movs	r2, r0
 80013ac:	6a21      	ldr	r1, [r4, #32]
 80013ae:	2300      	movs	r3, #0
 80013b0:	0028      	movs	r0, r5
 80013b2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80013b4:	47b8      	blx	r7
 80013b6:	89a1      	ldrh	r1, [r4, #12]
 80013b8:	1c43      	adds	r3, r0, #1
 80013ba:	d106      	bne.n	80013ca <__sflush_r+0x6a>
 80013bc:	682b      	ldr	r3, [r5, #0]
 80013be:	2b1d      	cmp	r3, #29
 80013c0:	d831      	bhi.n	8001426 <__sflush_r+0xc6>
 80013c2:	4a2c      	ldr	r2, [pc, #176]	; (8001474 <__sflush_r+0x114>)
 80013c4:	40da      	lsrs	r2, r3
 80013c6:	07d3      	lsls	r3, r2, #31
 80013c8:	d52d      	bpl.n	8001426 <__sflush_r+0xc6>
 80013ca:	2300      	movs	r3, #0
 80013cc:	6063      	str	r3, [r4, #4]
 80013ce:	6923      	ldr	r3, [r4, #16]
 80013d0:	6023      	str	r3, [r4, #0]
 80013d2:	04cb      	lsls	r3, r1, #19
 80013d4:	d505      	bpl.n	80013e2 <__sflush_r+0x82>
 80013d6:	1c43      	adds	r3, r0, #1
 80013d8:	d102      	bne.n	80013e0 <__sflush_r+0x80>
 80013da:	682b      	ldr	r3, [r5, #0]
 80013dc:	2b00      	cmp	r3, #0
 80013de:	d100      	bne.n	80013e2 <__sflush_r+0x82>
 80013e0:	6560      	str	r0, [r4, #84]	; 0x54
 80013e2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80013e4:	602e      	str	r6, [r5, #0]
 80013e6:	2900      	cmp	r1, #0
 80013e8:	d0c6      	beq.n	8001378 <__sflush_r+0x18>
 80013ea:	0023      	movs	r3, r4
 80013ec:	3344      	adds	r3, #68	; 0x44
 80013ee:	4299      	cmp	r1, r3
 80013f0:	d002      	beq.n	80013f8 <__sflush_r+0x98>
 80013f2:	0028      	movs	r0, r5
 80013f4:	f000 f91c 	bl	8001630 <_free_r>
 80013f8:	2000      	movs	r0, #0
 80013fa:	6360      	str	r0, [r4, #52]	; 0x34
 80013fc:	e7bd      	b.n	800137a <__sflush_r+0x1a>
 80013fe:	2301      	movs	r3, #1
 8001400:	0028      	movs	r0, r5
 8001402:	6a21      	ldr	r1, [r4, #32]
 8001404:	47b8      	blx	r7
 8001406:	1c43      	adds	r3, r0, #1
 8001408:	d1c5      	bne.n	8001396 <__sflush_r+0x36>
 800140a:	682b      	ldr	r3, [r5, #0]
 800140c:	2b00      	cmp	r3, #0
 800140e:	d0c2      	beq.n	8001396 <__sflush_r+0x36>
 8001410:	2b1d      	cmp	r3, #29
 8001412:	d001      	beq.n	8001418 <__sflush_r+0xb8>
 8001414:	2b16      	cmp	r3, #22
 8001416:	d101      	bne.n	800141c <__sflush_r+0xbc>
 8001418:	602e      	str	r6, [r5, #0]
 800141a:	e7ad      	b.n	8001378 <__sflush_r+0x18>
 800141c:	2340      	movs	r3, #64	; 0x40
 800141e:	89a2      	ldrh	r2, [r4, #12]
 8001420:	4313      	orrs	r3, r2
 8001422:	81a3      	strh	r3, [r4, #12]
 8001424:	e7a9      	b.n	800137a <__sflush_r+0x1a>
 8001426:	2340      	movs	r3, #64	; 0x40
 8001428:	430b      	orrs	r3, r1
 800142a:	e7fa      	b.n	8001422 <__sflush_r+0xc2>
 800142c:	690f      	ldr	r7, [r1, #16]
 800142e:	2f00      	cmp	r7, #0
 8001430:	d0a2      	beq.n	8001378 <__sflush_r+0x18>
 8001432:	680a      	ldr	r2, [r1, #0]
 8001434:	600f      	str	r7, [r1, #0]
 8001436:	1bd2      	subs	r2, r2, r7
 8001438:	9201      	str	r2, [sp, #4]
 800143a:	2200      	movs	r2, #0
 800143c:	079b      	lsls	r3, r3, #30
 800143e:	d100      	bne.n	8001442 <__sflush_r+0xe2>
 8001440:	694a      	ldr	r2, [r1, #20]
 8001442:	60a2      	str	r2, [r4, #8]
 8001444:	9b01      	ldr	r3, [sp, #4]
 8001446:	2b00      	cmp	r3, #0
 8001448:	dc00      	bgt.n	800144c <__sflush_r+0xec>
 800144a:	e795      	b.n	8001378 <__sflush_r+0x18>
 800144c:	003a      	movs	r2, r7
 800144e:	0028      	movs	r0, r5
 8001450:	9b01      	ldr	r3, [sp, #4]
 8001452:	6a21      	ldr	r1, [r4, #32]
 8001454:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001456:	47b0      	blx	r6
 8001458:	2800      	cmp	r0, #0
 800145a:	dc06      	bgt.n	800146a <__sflush_r+0x10a>
 800145c:	2340      	movs	r3, #64	; 0x40
 800145e:	2001      	movs	r0, #1
 8001460:	89a2      	ldrh	r2, [r4, #12]
 8001462:	4240      	negs	r0, r0
 8001464:	4313      	orrs	r3, r2
 8001466:	81a3      	strh	r3, [r4, #12]
 8001468:	e787      	b.n	800137a <__sflush_r+0x1a>
 800146a:	9b01      	ldr	r3, [sp, #4]
 800146c:	183f      	adds	r7, r7, r0
 800146e:	1a1b      	subs	r3, r3, r0
 8001470:	9301      	str	r3, [sp, #4]
 8001472:	e7e7      	b.n	8001444 <__sflush_r+0xe4>
 8001474:	20400001 	.word	0x20400001

08001478 <_fflush_r>:
 8001478:	690b      	ldr	r3, [r1, #16]
 800147a:	b570      	push	{r4, r5, r6, lr}
 800147c:	0005      	movs	r5, r0
 800147e:	000c      	movs	r4, r1
 8001480:	2b00      	cmp	r3, #0
 8001482:	d102      	bne.n	800148a <_fflush_r+0x12>
 8001484:	2500      	movs	r5, #0
 8001486:	0028      	movs	r0, r5
 8001488:	bd70      	pop	{r4, r5, r6, pc}
 800148a:	2800      	cmp	r0, #0
 800148c:	d004      	beq.n	8001498 <_fflush_r+0x20>
 800148e:	6983      	ldr	r3, [r0, #24]
 8001490:	2b00      	cmp	r3, #0
 8001492:	d101      	bne.n	8001498 <_fflush_r+0x20>
 8001494:	f7ff f9f2 	bl	800087c <__sinit>
 8001498:	4b14      	ldr	r3, [pc, #80]	; (80014ec <_fflush_r+0x74>)
 800149a:	429c      	cmp	r4, r3
 800149c:	d11b      	bne.n	80014d6 <_fflush_r+0x5e>
 800149e:	686c      	ldr	r4, [r5, #4]
 80014a0:	220c      	movs	r2, #12
 80014a2:	5ea3      	ldrsh	r3, [r4, r2]
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	d0ed      	beq.n	8001484 <_fflush_r+0xc>
 80014a8:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80014aa:	07d2      	lsls	r2, r2, #31
 80014ac:	d404      	bmi.n	80014b8 <_fflush_r+0x40>
 80014ae:	059b      	lsls	r3, r3, #22
 80014b0:	d402      	bmi.n	80014b8 <_fflush_r+0x40>
 80014b2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80014b4:	f7ff fa83 	bl	80009be <__retarget_lock_acquire_recursive>
 80014b8:	0028      	movs	r0, r5
 80014ba:	0021      	movs	r1, r4
 80014bc:	f7ff ff50 	bl	8001360 <__sflush_r>
 80014c0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80014c2:	0005      	movs	r5, r0
 80014c4:	07db      	lsls	r3, r3, #31
 80014c6:	d4de      	bmi.n	8001486 <_fflush_r+0xe>
 80014c8:	89a3      	ldrh	r3, [r4, #12]
 80014ca:	059b      	lsls	r3, r3, #22
 80014cc:	d4db      	bmi.n	8001486 <_fflush_r+0xe>
 80014ce:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80014d0:	f7ff fa76 	bl	80009c0 <__retarget_lock_release_recursive>
 80014d4:	e7d7      	b.n	8001486 <_fflush_r+0xe>
 80014d6:	4b06      	ldr	r3, [pc, #24]	; (80014f0 <_fflush_r+0x78>)
 80014d8:	429c      	cmp	r4, r3
 80014da:	d101      	bne.n	80014e0 <_fflush_r+0x68>
 80014dc:	68ac      	ldr	r4, [r5, #8]
 80014de:	e7df      	b.n	80014a0 <_fflush_r+0x28>
 80014e0:	4b04      	ldr	r3, [pc, #16]	; (80014f4 <_fflush_r+0x7c>)
 80014e2:	429c      	cmp	r4, r3
 80014e4:	d1dc      	bne.n	80014a0 <_fflush_r+0x28>
 80014e6:	68ec      	ldr	r4, [r5, #12]
 80014e8:	e7da      	b.n	80014a0 <_fflush_r+0x28>
 80014ea:	46c0      	nop			; (mov r8, r8)
 80014ec:	08001784 	.word	0x08001784
 80014f0:	080017a4 	.word	0x080017a4
 80014f4:	08001764 	.word	0x08001764

080014f8 <_lseek_r>:
 80014f8:	b570      	push	{r4, r5, r6, lr}
 80014fa:	0004      	movs	r4, r0
 80014fc:	0008      	movs	r0, r1
 80014fe:	0011      	movs	r1, r2
 8001500:	001a      	movs	r2, r3
 8001502:	2300      	movs	r3, #0
 8001504:	4d05      	ldr	r5, [pc, #20]	; (800151c <_lseek_r+0x24>)
 8001506:	602b      	str	r3, [r5, #0]
 8001508:	f7fe fffe 	bl	8000508 <_lseek>
 800150c:	1c43      	adds	r3, r0, #1
 800150e:	d103      	bne.n	8001518 <_lseek_r+0x20>
 8001510:	682b      	ldr	r3, [r5, #0]
 8001512:	2b00      	cmp	r3, #0
 8001514:	d000      	beq.n	8001518 <_lseek_r+0x20>
 8001516:	6023      	str	r3, [r4, #0]
 8001518:	bd70      	pop	{r4, r5, r6, pc}
 800151a:	46c0      	nop			; (mov r8, r8)
 800151c:	20000094 	.word	0x20000094

08001520 <__swhatbuf_r>:
 8001520:	b570      	push	{r4, r5, r6, lr}
 8001522:	000e      	movs	r6, r1
 8001524:	001d      	movs	r5, r3
 8001526:	230e      	movs	r3, #14
 8001528:	5ec9      	ldrsh	r1, [r1, r3]
 800152a:	0014      	movs	r4, r2
 800152c:	b096      	sub	sp, #88	; 0x58
 800152e:	2900      	cmp	r1, #0
 8001530:	da08      	bge.n	8001544 <__swhatbuf_r+0x24>
 8001532:	220c      	movs	r2, #12
 8001534:	5eb3      	ldrsh	r3, [r6, r2]
 8001536:	2200      	movs	r2, #0
 8001538:	602a      	str	r2, [r5, #0]
 800153a:	061b      	lsls	r3, r3, #24
 800153c:	d411      	bmi.n	8001562 <__swhatbuf_r+0x42>
 800153e:	2380      	movs	r3, #128	; 0x80
 8001540:	00db      	lsls	r3, r3, #3
 8001542:	e00f      	b.n	8001564 <__swhatbuf_r+0x44>
 8001544:	466a      	mov	r2, sp
 8001546:	f000 f8d1 	bl	80016ec <_fstat_r>
 800154a:	2800      	cmp	r0, #0
 800154c:	dbf1      	blt.n	8001532 <__swhatbuf_r+0x12>
 800154e:	23f0      	movs	r3, #240	; 0xf0
 8001550:	9901      	ldr	r1, [sp, #4]
 8001552:	021b      	lsls	r3, r3, #8
 8001554:	4019      	ands	r1, r3
 8001556:	4b05      	ldr	r3, [pc, #20]	; (800156c <__swhatbuf_r+0x4c>)
 8001558:	18c9      	adds	r1, r1, r3
 800155a:	424b      	negs	r3, r1
 800155c:	4159      	adcs	r1, r3
 800155e:	6029      	str	r1, [r5, #0]
 8001560:	e7ed      	b.n	800153e <__swhatbuf_r+0x1e>
 8001562:	2340      	movs	r3, #64	; 0x40
 8001564:	2000      	movs	r0, #0
 8001566:	6023      	str	r3, [r4, #0]
 8001568:	b016      	add	sp, #88	; 0x58
 800156a:	bd70      	pop	{r4, r5, r6, pc}
 800156c:	ffffe000 	.word	0xffffe000

08001570 <__smakebuf_r>:
 8001570:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001572:	2602      	movs	r6, #2
 8001574:	898b      	ldrh	r3, [r1, #12]
 8001576:	0005      	movs	r5, r0
 8001578:	000c      	movs	r4, r1
 800157a:	4233      	tst	r3, r6
 800157c:	d006      	beq.n	800158c <__smakebuf_r+0x1c>
 800157e:	0023      	movs	r3, r4
 8001580:	3347      	adds	r3, #71	; 0x47
 8001582:	6023      	str	r3, [r4, #0]
 8001584:	6123      	str	r3, [r4, #16]
 8001586:	2301      	movs	r3, #1
 8001588:	6163      	str	r3, [r4, #20]
 800158a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800158c:	466a      	mov	r2, sp
 800158e:	ab01      	add	r3, sp, #4
 8001590:	f7ff ffc6 	bl	8001520 <__swhatbuf_r>
 8001594:	9900      	ldr	r1, [sp, #0]
 8001596:	0007      	movs	r7, r0
 8001598:	0028      	movs	r0, r5
 800159a:	f7ff fa35 	bl	8000a08 <_malloc_r>
 800159e:	2800      	cmp	r0, #0
 80015a0:	d108      	bne.n	80015b4 <__smakebuf_r+0x44>
 80015a2:	220c      	movs	r2, #12
 80015a4:	5ea3      	ldrsh	r3, [r4, r2]
 80015a6:	059a      	lsls	r2, r3, #22
 80015a8:	d4ef      	bmi.n	800158a <__smakebuf_r+0x1a>
 80015aa:	2203      	movs	r2, #3
 80015ac:	4393      	bics	r3, r2
 80015ae:	431e      	orrs	r6, r3
 80015b0:	81a6      	strh	r6, [r4, #12]
 80015b2:	e7e4      	b.n	800157e <__smakebuf_r+0xe>
 80015b4:	4b0f      	ldr	r3, [pc, #60]	; (80015f4 <__smakebuf_r+0x84>)
 80015b6:	62ab      	str	r3, [r5, #40]	; 0x28
 80015b8:	2380      	movs	r3, #128	; 0x80
 80015ba:	89a2      	ldrh	r2, [r4, #12]
 80015bc:	6020      	str	r0, [r4, #0]
 80015be:	4313      	orrs	r3, r2
 80015c0:	81a3      	strh	r3, [r4, #12]
 80015c2:	9b00      	ldr	r3, [sp, #0]
 80015c4:	6120      	str	r0, [r4, #16]
 80015c6:	6163      	str	r3, [r4, #20]
 80015c8:	9b01      	ldr	r3, [sp, #4]
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	d00d      	beq.n	80015ea <__smakebuf_r+0x7a>
 80015ce:	0028      	movs	r0, r5
 80015d0:	230e      	movs	r3, #14
 80015d2:	5ee1      	ldrsh	r1, [r4, r3]
 80015d4:	f000 f89c 	bl	8001710 <_isatty_r>
 80015d8:	2800      	cmp	r0, #0
 80015da:	d006      	beq.n	80015ea <__smakebuf_r+0x7a>
 80015dc:	2203      	movs	r2, #3
 80015de:	89a3      	ldrh	r3, [r4, #12]
 80015e0:	4393      	bics	r3, r2
 80015e2:	001a      	movs	r2, r3
 80015e4:	2301      	movs	r3, #1
 80015e6:	4313      	orrs	r3, r2
 80015e8:	81a3      	strh	r3, [r4, #12]
 80015ea:	89a0      	ldrh	r0, [r4, #12]
 80015ec:	4307      	orrs	r7, r0
 80015ee:	81a7      	strh	r7, [r4, #12]
 80015f0:	e7cb      	b.n	800158a <__smakebuf_r+0x1a>
 80015f2:	46c0      	nop			; (mov r8, r8)
 80015f4:	08000801 	.word	0x08000801

080015f8 <memchr>:
 80015f8:	b2c9      	uxtb	r1, r1
 80015fa:	1882      	adds	r2, r0, r2
 80015fc:	4290      	cmp	r0, r2
 80015fe:	d101      	bne.n	8001604 <memchr+0xc>
 8001600:	2000      	movs	r0, #0
 8001602:	4770      	bx	lr
 8001604:	7803      	ldrb	r3, [r0, #0]
 8001606:	428b      	cmp	r3, r1
 8001608:	d0fb      	beq.n	8001602 <memchr+0xa>
 800160a:	3001      	adds	r0, #1
 800160c:	e7f6      	b.n	80015fc <memchr+0x4>
	...

08001610 <__malloc_lock>:
 8001610:	b510      	push	{r4, lr}
 8001612:	4802      	ldr	r0, [pc, #8]	; (800161c <__malloc_lock+0xc>)
 8001614:	f7ff f9d3 	bl	80009be <__retarget_lock_acquire_recursive>
 8001618:	bd10      	pop	{r4, pc}
 800161a:	46c0      	nop			; (mov r8, r8)
 800161c:	20000088 	.word	0x20000088

08001620 <__malloc_unlock>:
 8001620:	b510      	push	{r4, lr}
 8001622:	4802      	ldr	r0, [pc, #8]	; (800162c <__malloc_unlock+0xc>)
 8001624:	f7ff f9cc 	bl	80009c0 <__retarget_lock_release_recursive>
 8001628:	bd10      	pop	{r4, pc}
 800162a:	46c0      	nop			; (mov r8, r8)
 800162c:	20000088 	.word	0x20000088

08001630 <_free_r>:
 8001630:	b570      	push	{r4, r5, r6, lr}
 8001632:	0005      	movs	r5, r0
 8001634:	2900      	cmp	r1, #0
 8001636:	d010      	beq.n	800165a <_free_r+0x2a>
 8001638:	1f0c      	subs	r4, r1, #4
 800163a:	6823      	ldr	r3, [r4, #0]
 800163c:	2b00      	cmp	r3, #0
 800163e:	da00      	bge.n	8001642 <_free_r+0x12>
 8001640:	18e4      	adds	r4, r4, r3
 8001642:	0028      	movs	r0, r5
 8001644:	f7ff ffe4 	bl	8001610 <__malloc_lock>
 8001648:	4a1d      	ldr	r2, [pc, #116]	; (80016c0 <_free_r+0x90>)
 800164a:	6813      	ldr	r3, [r2, #0]
 800164c:	2b00      	cmp	r3, #0
 800164e:	d105      	bne.n	800165c <_free_r+0x2c>
 8001650:	6063      	str	r3, [r4, #4]
 8001652:	6014      	str	r4, [r2, #0]
 8001654:	0028      	movs	r0, r5
 8001656:	f7ff ffe3 	bl	8001620 <__malloc_unlock>
 800165a:	bd70      	pop	{r4, r5, r6, pc}
 800165c:	42a3      	cmp	r3, r4
 800165e:	d908      	bls.n	8001672 <_free_r+0x42>
 8001660:	6821      	ldr	r1, [r4, #0]
 8001662:	1860      	adds	r0, r4, r1
 8001664:	4283      	cmp	r3, r0
 8001666:	d1f3      	bne.n	8001650 <_free_r+0x20>
 8001668:	6818      	ldr	r0, [r3, #0]
 800166a:	685b      	ldr	r3, [r3, #4]
 800166c:	1841      	adds	r1, r0, r1
 800166e:	6021      	str	r1, [r4, #0]
 8001670:	e7ee      	b.n	8001650 <_free_r+0x20>
 8001672:	001a      	movs	r2, r3
 8001674:	685b      	ldr	r3, [r3, #4]
 8001676:	2b00      	cmp	r3, #0
 8001678:	d001      	beq.n	800167e <_free_r+0x4e>
 800167a:	42a3      	cmp	r3, r4
 800167c:	d9f9      	bls.n	8001672 <_free_r+0x42>
 800167e:	6811      	ldr	r1, [r2, #0]
 8001680:	1850      	adds	r0, r2, r1
 8001682:	42a0      	cmp	r0, r4
 8001684:	d10b      	bne.n	800169e <_free_r+0x6e>
 8001686:	6820      	ldr	r0, [r4, #0]
 8001688:	1809      	adds	r1, r1, r0
 800168a:	1850      	adds	r0, r2, r1
 800168c:	6011      	str	r1, [r2, #0]
 800168e:	4283      	cmp	r3, r0
 8001690:	d1e0      	bne.n	8001654 <_free_r+0x24>
 8001692:	6818      	ldr	r0, [r3, #0]
 8001694:	685b      	ldr	r3, [r3, #4]
 8001696:	1841      	adds	r1, r0, r1
 8001698:	6011      	str	r1, [r2, #0]
 800169a:	6053      	str	r3, [r2, #4]
 800169c:	e7da      	b.n	8001654 <_free_r+0x24>
 800169e:	42a0      	cmp	r0, r4
 80016a0:	d902      	bls.n	80016a8 <_free_r+0x78>
 80016a2:	230c      	movs	r3, #12
 80016a4:	602b      	str	r3, [r5, #0]
 80016a6:	e7d5      	b.n	8001654 <_free_r+0x24>
 80016a8:	6821      	ldr	r1, [r4, #0]
 80016aa:	1860      	adds	r0, r4, r1
 80016ac:	4283      	cmp	r3, r0
 80016ae:	d103      	bne.n	80016b8 <_free_r+0x88>
 80016b0:	6818      	ldr	r0, [r3, #0]
 80016b2:	685b      	ldr	r3, [r3, #4]
 80016b4:	1841      	adds	r1, r0, r1
 80016b6:	6021      	str	r1, [r4, #0]
 80016b8:	6063      	str	r3, [r4, #4]
 80016ba:	6054      	str	r4, [r2, #4]
 80016bc:	e7ca      	b.n	8001654 <_free_r+0x24>
 80016be:	46c0      	nop			; (mov r8, r8)
 80016c0:	2000008c 	.word	0x2000008c

080016c4 <_read_r>:
 80016c4:	b570      	push	{r4, r5, r6, lr}
 80016c6:	0004      	movs	r4, r0
 80016c8:	0008      	movs	r0, r1
 80016ca:	0011      	movs	r1, r2
 80016cc:	001a      	movs	r2, r3
 80016ce:	2300      	movs	r3, #0
 80016d0:	4d05      	ldr	r5, [pc, #20]	; (80016e8 <_read_r+0x24>)
 80016d2:	602b      	str	r3, [r5, #0]
 80016d4:	f7fe febe 	bl	8000454 <_read>
 80016d8:	1c43      	adds	r3, r0, #1
 80016da:	d103      	bne.n	80016e4 <_read_r+0x20>
 80016dc:	682b      	ldr	r3, [r5, #0]
 80016de:	2b00      	cmp	r3, #0
 80016e0:	d000      	beq.n	80016e4 <_read_r+0x20>
 80016e2:	6023      	str	r3, [r4, #0]
 80016e4:	bd70      	pop	{r4, r5, r6, pc}
 80016e6:	46c0      	nop			; (mov r8, r8)
 80016e8:	20000094 	.word	0x20000094

080016ec <_fstat_r>:
 80016ec:	2300      	movs	r3, #0
 80016ee:	b570      	push	{r4, r5, r6, lr}
 80016f0:	4d06      	ldr	r5, [pc, #24]	; (800170c <_fstat_r+0x20>)
 80016f2:	0004      	movs	r4, r0
 80016f4:	0008      	movs	r0, r1
 80016f6:	0011      	movs	r1, r2
 80016f8:	602b      	str	r3, [r5, #0]
 80016fa:	f7fe feee 	bl	80004da <_fstat>
 80016fe:	1c43      	adds	r3, r0, #1
 8001700:	d103      	bne.n	800170a <_fstat_r+0x1e>
 8001702:	682b      	ldr	r3, [r5, #0]
 8001704:	2b00      	cmp	r3, #0
 8001706:	d000      	beq.n	800170a <_fstat_r+0x1e>
 8001708:	6023      	str	r3, [r4, #0]
 800170a:	bd70      	pop	{r4, r5, r6, pc}
 800170c:	20000094 	.word	0x20000094

08001710 <_isatty_r>:
 8001710:	2300      	movs	r3, #0
 8001712:	b570      	push	{r4, r5, r6, lr}
 8001714:	4d06      	ldr	r5, [pc, #24]	; (8001730 <_isatty_r+0x20>)
 8001716:	0004      	movs	r4, r0
 8001718:	0008      	movs	r0, r1
 800171a:	602b      	str	r3, [r5, #0]
 800171c:	f7fe feeb 	bl	80004f6 <_isatty>
 8001720:	1c43      	adds	r3, r0, #1
 8001722:	d103      	bne.n	800172c <_isatty_r+0x1c>
 8001724:	682b      	ldr	r3, [r5, #0]
 8001726:	2b00      	cmp	r3, #0
 8001728:	d000      	beq.n	800172c <_isatty_r+0x1c>
 800172a:	6023      	str	r3, [r4, #0]
 800172c:	bd70      	pop	{r4, r5, r6, pc}
 800172e:	46c0      	nop			; (mov r8, r8)
 8001730:	20000094 	.word	0x20000094

08001734 <_init>:
 8001734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001736:	46c0      	nop			; (mov r8, r8)
 8001738:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800173a:	bc08      	pop	{r3}
 800173c:	469e      	mov	lr, r3
 800173e:	4770      	bx	lr

08001740 <_fini>:
 8001740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001742:	46c0      	nop			; (mov r8, r8)
 8001744:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001746:	bc08      	pop	{r3}
 8001748:	469e      	mov	lr, r3
 800174a:	4770      	bx	lr
