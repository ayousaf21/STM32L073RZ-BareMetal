
4_GPIO_input.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000198  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000258  08000260  00010260  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000258  08000258  00010260  2**0
                  CONTENTS
  4 .ARM          00000000  08000258  08000258  00010260  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000258  08000260  00010260  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000258  08000258  00010258  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800025c  0800025c  0001025c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010260  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000260  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000260  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010260  2**0
                  CONTENTS, READONLY
 12 .debug_info   000002f4  00000000  00000000  00010288  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000108  00000000  00000000  0001057c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00010688  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000038  00000000  00000000  000106d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000bac7  00000000  00000000  00010710  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000532  00000000  00000000  0001c1d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003f9d8  00000000  00000000  0001c709  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0005c0e1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000078  00000000  00000000  0005c134  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000240 	.word	0x08000240

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	08000240 	.word	0x08000240

08000108 <main>:
	for (int i = 0; i < (delay * 100); i++) {}
}


int main(void)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	af00      	add	r7, sp, #0
	// Enable GPIO clock for Port A and C
	RCC->IOPENR |= GPIOAEN;
 800010c:	4b20      	ldr	r3, [pc, #128]	; (8000190 <main+0x88>)
 800010e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000110:	4b1f      	ldr	r3, [pc, #124]	; (8000190 <main+0x88>)
 8000112:	2101      	movs	r1, #1
 8000114:	430a      	orrs	r2, r1
 8000116:	62da      	str	r2, [r3, #44]	; 0x2c
	RCC->IOPENR |= GPIOCEN;
 8000118:	4b1d      	ldr	r3, [pc, #116]	; (8000190 <main+0x88>)
 800011a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800011c:	4b1c      	ldr	r3, [pc, #112]	; (8000190 <main+0x88>)
 800011e:	2104      	movs	r1, #4
 8000120:	430a      	orrs	r2, r1
 8000122:	62da      	str	r2, [r3, #44]	; 0x2c
	// GPIO PA5 output mode
	GPIOA->MODER |= (1U << 10);
 8000124:	23a0      	movs	r3, #160	; 0xa0
 8000126:	05db      	lsls	r3, r3, #23
 8000128:	681a      	ldr	r2, [r3, #0]
 800012a:	23a0      	movs	r3, #160	; 0xa0
 800012c:	05db      	lsls	r3, r3, #23
 800012e:	2180      	movs	r1, #128	; 0x80
 8000130:	00c9      	lsls	r1, r1, #3
 8000132:	430a      	orrs	r2, r1
 8000134:	601a      	str	r2, [r3, #0]
	GPIOA->MODER &= ~(1U << 11);
 8000136:	23a0      	movs	r3, #160	; 0xa0
 8000138:	05db      	lsls	r3, r3, #23
 800013a:	681a      	ldr	r2, [r3, #0]
 800013c:	23a0      	movs	r3, #160	; 0xa0
 800013e:	05db      	lsls	r3, r3, #23
 8000140:	4914      	ldr	r1, [pc, #80]	; (8000194 <main+0x8c>)
 8000142:	400a      	ands	r2, r1
 8000144:	601a      	str	r2, [r3, #0]
	// GPIO PC13 input mode
	GPIOC->MODER &= ~(1U << 26);
 8000146:	4b14      	ldr	r3, [pc, #80]	; (8000198 <main+0x90>)
 8000148:	681a      	ldr	r2, [r3, #0]
 800014a:	4b13      	ldr	r3, [pc, #76]	; (8000198 <main+0x90>)
 800014c:	4913      	ldr	r1, [pc, #76]	; (800019c <main+0x94>)
 800014e:	400a      	ands	r2, r1
 8000150:	601a      	str	r2, [r3, #0]
	GPIOC->MODER &= ~(1U << 27);
 8000152:	4b11      	ldr	r3, [pc, #68]	; (8000198 <main+0x90>)
 8000154:	681a      	ldr	r2, [r3, #0]
 8000156:	4b10      	ldr	r3, [pc, #64]	; (8000198 <main+0x90>)
 8000158:	4911      	ldr	r1, [pc, #68]	; (80001a0 <main+0x98>)
 800015a:	400a      	ands	r2, r1
 800015c:	601a      	str	r2, [r3, #0]
    /* Loop forever */
	while(1)
	{
		// User BTN is active low
		if (GPIOC->IDR & PIN13_READ)
 800015e:	4b0e      	ldr	r3, [pc, #56]	; (8000198 <main+0x90>)
 8000160:	691a      	ldr	r2, [r3, #16]
 8000162:	2380      	movs	r3, #128	; 0x80
 8000164:	019b      	lsls	r3, r3, #6
 8000166:	4013      	ands	r3, r2
 8000168:	d009      	beq.n	800017e <main+0x76>
		{
		GPIOA->BSRR |= PIN5_RESET;	// LED ON
 800016a:	23a0      	movs	r3, #160	; 0xa0
 800016c:	05db      	lsls	r3, r3, #23
 800016e:	699a      	ldr	r2, [r3, #24]
 8000170:	23a0      	movs	r3, #160	; 0xa0
 8000172:	05db      	lsls	r3, r3, #23
 8000174:	2180      	movs	r1, #128	; 0x80
 8000176:	0389      	lsls	r1, r1, #14
 8000178:	430a      	orrs	r2, r1
 800017a:	619a      	str	r2, [r3, #24]
 800017c:	e7ef      	b.n	800015e <main+0x56>
		}
		else {
		GPIOA->BSRR |= PIN5_SET;	// BTN pressed, LED OFF
 800017e:	23a0      	movs	r3, #160	; 0xa0
 8000180:	05db      	lsls	r3, r3, #23
 8000182:	699a      	ldr	r2, [r3, #24]
 8000184:	23a0      	movs	r3, #160	; 0xa0
 8000186:	05db      	lsls	r3, r3, #23
 8000188:	2120      	movs	r1, #32
 800018a:	430a      	orrs	r2, r1
 800018c:	619a      	str	r2, [r3, #24]
		if (GPIOC->IDR & PIN13_READ)
 800018e:	e7e6      	b.n	800015e <main+0x56>
 8000190:	40021000 	.word	0x40021000
 8000194:	fffff7ff 	.word	0xfffff7ff
 8000198:	50000800 	.word	0x50000800
 800019c:	fbffffff 	.word	0xfbffffff
 80001a0:	f7ffffff 	.word	0xf7ffffff

080001a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001a4:	480d      	ldr	r0, [pc, #52]	; (80001dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001a6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001a8:	e000      	b.n	80001ac <Reset_Handler+0x8>
 80001aa:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001ac:	480c      	ldr	r0, [pc, #48]	; (80001e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80001ae:	490d      	ldr	r1, [pc, #52]	; (80001e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001b0:	4a0d      	ldr	r2, [pc, #52]	; (80001e8 <LoopForever+0xe>)
  movs r3, #0
 80001b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001b4:	e002      	b.n	80001bc <LoopCopyDataInit>

080001b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001ba:	3304      	adds	r3, #4

080001bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001c0:	d3f9      	bcc.n	80001b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001c2:	4a0a      	ldr	r2, [pc, #40]	; (80001ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80001c4:	4c0a      	ldr	r4, [pc, #40]	; (80001f0 <LoopForever+0x16>)
  movs r3, #0
 80001c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001c8:	e001      	b.n	80001ce <LoopFillZerobss>

080001ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001cc:	3204      	adds	r2, #4

080001ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001d0:	d3fb      	bcc.n	80001ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001d2:	f000 f811 	bl	80001f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001d6:	f7ff ff97 	bl	8000108 <main>

080001da <LoopForever>:

LoopForever:
  b LoopForever
 80001da:	e7fe      	b.n	80001da <LoopForever>
  ldr   r0, =_estack
 80001dc:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80001e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001e4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001e8:	08000260 	.word	0x08000260
  ldr r2, =_sbss
 80001ec:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80001f0:	2000001c 	.word	0x2000001c

080001f4 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001f4:	e7fe      	b.n	80001f4 <ADC_COMP_IRQHandler>
	...

080001f8 <__libc_init_array>:
 80001f8:	b570      	push	{r4, r5, r6, lr}
 80001fa:	2600      	movs	r6, #0
 80001fc:	4d0c      	ldr	r5, [pc, #48]	; (8000230 <__libc_init_array+0x38>)
 80001fe:	4c0d      	ldr	r4, [pc, #52]	; (8000234 <__libc_init_array+0x3c>)
 8000200:	1b64      	subs	r4, r4, r5
 8000202:	10a4      	asrs	r4, r4, #2
 8000204:	42a6      	cmp	r6, r4
 8000206:	d109      	bne.n	800021c <__libc_init_array+0x24>
 8000208:	2600      	movs	r6, #0
 800020a:	f000 f819 	bl	8000240 <_init>
 800020e:	4d0a      	ldr	r5, [pc, #40]	; (8000238 <__libc_init_array+0x40>)
 8000210:	4c0a      	ldr	r4, [pc, #40]	; (800023c <__libc_init_array+0x44>)
 8000212:	1b64      	subs	r4, r4, r5
 8000214:	10a4      	asrs	r4, r4, #2
 8000216:	42a6      	cmp	r6, r4
 8000218:	d105      	bne.n	8000226 <__libc_init_array+0x2e>
 800021a:	bd70      	pop	{r4, r5, r6, pc}
 800021c:	00b3      	lsls	r3, r6, #2
 800021e:	58eb      	ldr	r3, [r5, r3]
 8000220:	4798      	blx	r3
 8000222:	3601      	adds	r6, #1
 8000224:	e7ee      	b.n	8000204 <__libc_init_array+0xc>
 8000226:	00b3      	lsls	r3, r6, #2
 8000228:	58eb      	ldr	r3, [r5, r3]
 800022a:	4798      	blx	r3
 800022c:	3601      	adds	r6, #1
 800022e:	e7f2      	b.n	8000216 <__libc_init_array+0x1e>
 8000230:	08000258 	.word	0x08000258
 8000234:	08000258 	.word	0x08000258
 8000238:	08000258 	.word	0x08000258
 800023c:	0800025c 	.word	0x0800025c

08000240 <_init>:
 8000240:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000242:	46c0      	nop			; (mov r8, r8)
 8000244:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000246:	bc08      	pop	{r3}
 8000248:	469e      	mov	lr, r3
 800024a:	4770      	bx	lr

0800024c <_fini>:
 800024c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800024e:	46c0      	nop			; (mov r8, r8)
 8000250:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000252:	bc08      	pop	{r3}
 8000254:	469e      	mov	lr, r3
 8000256:	4770      	bx	lr
